{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = determineCrossOrigin;\n\nvar _url2 = require('url');\n\nvar _url3 = _interopRequireDefault(_url2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar tempAnchor = void 0;\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\n\nfunction determineCrossOrigin(url) {\n  var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location; // data: and javascript: urls are considered same-origin\n\n  if (url.indexOf('data:') === 0) {\n    return '';\n  } // default is window.location\n\n\n  loc = loc || window.location;\n\n  if (!tempAnchor) {\n    tempAnchor = document.createElement('a');\n  } // let the browser determine the full href for the url of this resource and then\n  // parse with the node url lib, we can't use the properties of the anchor element\n  // because they don't work in IE9 :(\n\n\n  tempAnchor.href = url;\n  url = _url3.default.parse(tempAnchor.href);\n  var samePort = !url.port && loc.port === '' || url.port === loc.port; // if cross origin\n\n  if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol) {\n    return 'anonymous';\n  }\n\n  return '';\n}","map":{"version":3,"sources":["../../../src/core/utils/determineCrossOrigin.js"],"names":["tempAnchor","determineCrossOrigin","loc","window","location","url","document","samePort"],"mappings":";;;kBAewBC,oB;;AAfxB,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;;;;;;;;;AAEA,IAAID,UAAAA,GAAAA,KAAJ,CAAA;AAEA;;;;;;;;;;;;AAWe,SAAA,oBAAA,CAAA,GAAA,EACf;AAAA,MADkDE,GAClD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADwDC,MAAAA,CAAOC,QAC/D,CAAA,CACI;;AACA,MAAIC,GAAAA,CAAAA,OAAAA,CAAAA,OAAAA,MAAJ,CAAA,EACA;AACI,WAAA,EAAA;AACH,GALL,CAOI;;;AACAH,EAAAA,GAAAA,GAAMA,GAAAA,IAAOC,MAAAA,CAAbD,QAAAA;;AAEA,MAAI,CAAJ,UAAA,EACA;AACIF,IAAAA,UAAAA,GAAaM,QAAAA,CAAAA,aAAAA,CAAbN,GAAaM,CAAbN;AACH,GAbL,CAeI;AACA;AACA;;;AACAA,EAAAA,UAAAA,CAAAA,IAAAA,GAAAA,GAAAA;AACAK,EAAAA,GAAAA,GAAM,KAAA,CAAA,OAAA,CAAA,KAAA,CAAWL,UAAAA,CAAjBK,IAAM,CAANA;AAEA,MAAME,QAAAA,GAAY,CAACF,GAAAA,CAAD,IAAA,IAAaH,GAAAA,CAAAA,IAAAA,KAAd,EAAC,IAAkCG,GAAAA,CAAAA,IAAAA,KAAaH,GAAAA,CAAjE,IAAA,CArBJ,CAuBI;;AACA,MAAIG,GAAAA,CAAAA,QAAAA,KAAiBH,GAAAA,CAAjBG,QAAAA,IAAiC,CAAjCA,QAAAA,IAA8CA,GAAAA,CAAAA,QAAAA,KAAiBH,GAAAA,CAAnE,QAAA,EACA;AACI,WAAA,WAAA;AACH;;AAED,SAAA,EAAA;AACH","sourcesContent":["import _url from 'url';\n\nlet tempAnchor;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport default function determineCrossOrigin(url, loc = window.location)\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url.parse(tempAnchor.href);\n\n    const samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n"]},"metadata":{},"sourceType":"script"}