{"ast":null,"code":"import moment from'moment';import'moment/locale/fr';moment.locale('fr');var getDailyForecast=function getDailyForecast(daylyforecast){return daylyforecast.map(function(dayly){return{day:moment(dayly.dt*1000).format('dddd'),date:moment(dayly.dt*1000).format('D MMMM'),temperature:Math.round(dayly.temp.day),temperatureMin:Math.round(dayly.temp.min),temperatureMax:Math.round(dayly.temp.max),temperatureressenti:Math.round(dayly.feels_like.day),descriptions:dayly.weather[0].description,pressure:Math.round(dayly.pressure),uvi:dayly.uvi,icon:dayly.weather[0].icon,humidity:dayly.humidity};});};export default getDailyForecast;","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/src/helpers/getDailyForecast.js"],"names":["moment","locale","getDailyForecast","daylyforecast","map","dayly","day","dt","format","date","temperature","Math","round","temp","temperatureMin","min","temperatureMax","max","temperatureressenti","feels_like","descriptions","weather","description","pressure","uvi","icon","humidity"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,kBAAP,CACAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,aAAa,QAElCA,CAAAA,aAAa,CAACC,GAAd,CAAkB,SAAAC,KAAK,QAAK,CAC5BC,GAAG,CAAEN,MAAM,CAACK,KAAK,CAACE,EAAN,CAAS,IAAV,CAAN,CAAsBC,MAAtB,CAA6B,MAA7B,CADuB,CAE5BC,IAAI,CAAET,MAAM,CAACK,KAAK,CAACE,EAAN,CAAS,IAAV,CAAN,CAAsBC,MAAtB,CAA6B,QAA7B,CAFsB,CAG5BE,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACQ,IAAN,CAAWP,GAAtB,CAHc,CAI5BQ,cAAc,CAAGH,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACQ,IAAN,CAAWE,GAAtB,CAJW,CAK5BC,cAAc,CAAGL,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACQ,IAAN,CAAWI,GAAtB,CALW,CAM5BC,mBAAmB,CAAGP,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACc,UAAN,CAAiBb,GAA5B,CANM,CAO5Bc,YAAY,CAAGf,KAAK,CAACgB,OAAN,CAAc,CAAd,EAAiBC,WAPJ,CAQ5BC,QAAQ,CAAGZ,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACkB,QAAjB,CARiB,CAS5BC,GAAG,CAAGnB,KAAK,CAACmB,GATgB,CAU5BC,IAAI,CAAGpB,KAAK,CAACgB,OAAN,CAAc,CAAd,EAAiBI,IAVI,CAW5BC,QAAQ,CAAErB,KAAK,CAACqB,QAXY,CAAL,EAAvB,CAFkC,EAAtC,CAgBA,cAAexB,CAAAA,gBAAf","sourcesContent":["import moment from 'moment';\nimport 'moment/locale/fr'\nmoment.locale('fr');\n\nconst getDailyForecast = daylyforecast => \n\n    daylyforecast.map(dayly => ({\n    day: moment(dayly.dt*1000).format('dddd'),\n    date: moment(dayly.dt*1000).format('D MMMM'),\n    temperature : Math.round(dayly.temp.day),\n    temperatureMin : Math.round(dayly.temp.min),\n    temperatureMax : Math.round(dayly.temp.max),\n    temperatureressenti : Math.round(dayly.feels_like.day),\n    descriptions : dayly.weather[0].description,\n    pressure : Math.round(dayly.pressure),\n    uvi : dayly.uvi,\n    icon : dayly.weather[0].icon,\n    humidity: dayly.humidity,\n}));\n\nexport default getDailyForecast\n            "]},"metadata":{},"sourceType":"module"}