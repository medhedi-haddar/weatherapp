{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport getCurrentForecast from './helpers/getCurrentForecast';\nimport getAlertForecast from './helpers/getAlertForecast';\nimport getHourlyForecast from './helpers/getHourlyForecast';\nimport getDailyForecast from './helpers/getDailyForecast';\nimport getDetailCurrentForecast from './helpers/getDetailCurrentForecast';\nimport Cookies from 'js-cookie';\nconst API_KEY = \"b96cf2201d3a30a9889082d993d5610e\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\"; // const CROSS_URL = \"https://cors-anywhere.herokuapp.com\"\n// const REQUEST_URL = `${CROSS_URL}/${BASE_URL}`;\n\nconst useForecast = () => {\n  _s();\n\n  const tab = [{\n    num: 'un'\n  }, {\n    num: 'un'\n  }]; // Cookies.set('favories', tab);\n  // Cookies.remove();\n  // Cookies.set('favories', ['paris','berlin']);\n\n  const favoriesCookie = Cookies.get('favories'); // if(favoriesCookie)\n  // {\n  //     console.log(favoriesCookie[0]);\n  //     // favoriesCookie.forEach(function (element,index) {\n  //     //     console.log('index:', index, 'valeur:', element);\n  //     //   });\n  // }\n\n  console.log(favoriesCookie);\n  tab.forEach(function (element, index) {\n    console.log('index:', index, 'valeur:', element);\n  });\n  const [isError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  const getCurrentLocationData = async location => {\n    try {\n      const allData = await axios(`${BASE_URL}/weather?q=${location}&units=metric&lang=fr&appid=${API_KEY}`);\n      const data = allData.data;\n      return {\n        data\n      };\n    } catch (error) {\n      return;\n    }\n  };\n\n  const getDetailLocationData = async (lat, lon) => {\n    try {\n      const detailData = await axios(`${BASE_URL}/onecall?units=metric&lat=${lat}&lon=${lon}&lang=fr&exclude=minutely&appid=${API_KEY}`);\n      const data = detailData;\n      return {\n        data\n      };\n    } catch (error) {\n      return;\n    }\n  };\n\n  const getLocationBase = async location => {\n    try {\n      const cityData = await getCurrentLocationData(location);\n      const current_data = cityData.data;\n      const Location_lat = cityData.data.coord.lat;\n      const Location_lon = cityData.data.coord.lon;\n\n      try {\n        const cityDetails = await getDetailLocationData(Location_lat, Location_lon);\n        const dataObject = {\n          current_data: current_data,\n          cityDetails: cityDetails.data.data\n        };\n        return dataObject;\n      } catch (error) {\n        return;\n      }\n    } catch (error) {\n      return;\n    }\n  };\n\n  const deployData = data => {\n    const currentForecast = getCurrentForecast(data.current_data);\n    const hourlyForecast = getHourlyForecast(data.cityDetails.hourly);\n    const daylyForecast = getDailyForecast(data.cityDetails.daily);\n    const alertsForecast = getAlertForecast(data.cityDetails.alerts);\n    const detailCurrentForecast = getDetailCurrentForecast(data.cityDetails.daily[0]);\n    setForecast({\n      currentForecast,\n      hourlyForecast,\n      daylyForecast,\n      alertsForecast,\n      detailCurrentForecast\n    });\n    setLoading(false);\n  }; // on submit location recup DATA\n\n\n  const submitRequest = async location => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const response = await getLocationBase(location);\n      deployData(response);\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n      return;\n    }\n  };\n\n  return {\n    isError,\n    isLoading,\n    forecast,\n    submitRequest\n  };\n};\n\n_s(useForecast, \"98jJfAbkRG8B5Phem9UEdOko1FU=\");\n\nexport default useForecast;","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/src/useForecast.js"],"names":["useState","axios","getCurrentForecast","getAlertForecast","getHourlyForecast","getDailyForecast","getDetailCurrentForecast","Cookies","API_KEY","BASE_URL","useForecast","tab","num","favoriesCookie","get","console","log","forEach","element","index","isError","setError","isLoading","setLoading","forecast","setForecast","getCurrentLocationData","location","allData","data","error","getDetailLocationData","lat","lon","detailData","getLocationBase","cityData","current_data","Location_lat","coord","Location_lon","cityDetails","dataObject","deployData","currentForecast","hourlyForecast","hourly","daylyForecast","daily","alertsForecast","alerts","detailCurrentForecast","submitRequest","response"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,wBAAP,MAAqC,oCAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,yCAAjB,C,CACA;AACA;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,GAAG,GAAG,CAAC;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAD,EACZ;AAACA,IAAAA,GAAG,EAAE;AAAN,GADY,CAAZ,CADsB,CAItB;AACA;AACA;;AACA,QAAMC,cAAc,GAAGN,OAAO,CAACO,GAAR,CAAY,UAAZ,CAAvB,CAPsB,CAStB;AACA;AACA;AACA;AACA;AACA;AAGA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEJF,EAAAA,GAAG,CAACM,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB,EAA6B,SAA7B,EAAwCD,OAAxC;AACD,GAFD;AAII,QAAM,CAACE,OAAD,EAAUC,QAAV,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACsB,SAAD,EAAYC,UAAZ,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAM0B,sBAAsB,GAAG,MAAOC,QAAP,IAAmB;AAC9C,QAAI;AACA,YAAMC,OAAO,GAAG,MAAM3B,KAAK,CAAE,GAAEQ,QAAS,cAAakB,QAAS,+BAA8BnB,OAAQ,EAAzE,CAA3B;AAEA,YAAMqB,IAAI,GAAGD,OAAO,CAACC,IAArB;AACA,aAAO;AAACA,QAAAA;AAAD,OAAP;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZ;AACH;AACJ,GATD;;AAWA,QAAMC,qBAAqB,GAAG,OAAOC,GAAP,EAAWC,GAAX,KAAkB;AAC5C,QAAI;AACA,YAAMC,UAAU,GAAG,MAAMjC,KAAK,CAAE,GAAEQ,QAAS,6BAA4BuB,GAAI,QAAOC,GAAI,mCAAkCzB,OAAQ,EAAlG,CAA9B;AAEA,YAAMqB,IAAI,GAAGK,UAAb;AACJ,aAAO;AAACL,QAAAA;AAAD,OAAP;AACC,KALD,CAKE,OAAOC,KAAP,EAAc;AACZ;AACH;AACJ,GATD;;AAWA,QAAMK,eAAe,GAAG,MAAOR,QAAP,IAAoB;AACxC,QAAI;AACA,YAAMS,QAAQ,GAAG,MAAMV,sBAAsB,CAACC,QAAD,CAA7C;AAEA,YAAMU,YAAY,GAAGD,QAAQ,CAACP,IAA9B;AACA,YAAMS,YAAY,GAAGF,QAAQ,CAACP,IAAT,CAAcU,KAAd,CAAoBP,GAAzC;AACA,YAAMQ,YAAY,GAAGJ,QAAQ,CAACP,IAAT,CAAcU,KAAd,CAAoBN,GAAzC;;AACA,UAAI;AACA,cAAMQ,WAAW,GAAE,MAAMV,qBAAqB,CAACO,YAAD,EAAcE,YAAd,CAA9C;AAEA,cAAME,UAAU,GAAG;AAACL,UAAAA,YAAY,EAAGA,YAAhB;AAA8BI,UAAAA,WAAW,EAAGA,WAAW,CAACZ,IAAZ,CAAiBA;AAA7D,SAAnB;AACA,eAAOa,UAAP;AACH,OALD,CAKE,OAAOZ,KAAP,EAAc;AACZ;AACH;AACJ,KAdD,CAcE,OAAOA,KAAP,EAAc;AACZ;AACH;AACJ,GAlBD;;AAoBA,QAAMa,UAAU,GAAId,IAAD,IAAS;AAExB,UAAMe,eAAe,GAAG1C,kBAAkB,CAAC2B,IAAI,CAACQ,YAAN,CAA1C;AACA,UAAMQ,cAAc,GAAGzC,iBAAiB,CAACyB,IAAI,CAACY,WAAL,CAAiBK,MAAlB,CAAxC;AACA,UAAMC,aAAa,GAAG1C,gBAAgB,CAACwB,IAAI,CAACY,WAAL,CAAiBO,KAAlB,CAAtC;AACA,UAAMC,cAAc,GAAG9C,gBAAgB,CAAC0B,IAAI,CAACY,WAAL,CAAiBS,MAAlB,CAAvC;AACA,UAAMC,qBAAqB,GAAG7C,wBAAwB,CAACuB,IAAI,CAACY,WAAL,CAAiBO,KAAjB,CAAuB,CAAvB,CAAD,CAAtD;AAEAvB,IAAAA,WAAW,CAAC;AACRmB,MAAAA,eADQ;AAERC,MAAAA,cAFQ;AAGRE,MAAAA,aAHQ;AAIRE,MAAAA,cAJQ;AAKRE,MAAAA;AALQ,KAAD,CAAX;AAOA5B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAhBD,CAtEsB,CAuFtB;;;AACA,QAAM6B,aAAa,GAAG,MAAMzB,QAAN,IAAiB;AACnCJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACA,YAAMgC,QAAQ,GAAG,MAAMlB,eAAe,CAACR,QAAD,CAAtC;AACAgB,MAAAA,UAAU,CAACU,QAAD,CAAV;AACH,KAHD,CAGE,OAAOvB,KAAP,EAAc;AACZT,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;AACJ,GAXD;;AAaE,SAAO;AACLH,IAAAA,OADK;AAELE,IAAAA,SAFK;AAGLE,IAAAA,QAHK;AAIL4B,IAAAA;AAJK,GAAP;AAML,CA3GD;;GAAM1C,W;;AA6GN,eAAeA,WAAf","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios';\nimport getCurrentForecast from './helpers/getCurrentForecast';\nimport getAlertForecast from './helpers/getAlertForecast';\nimport getHourlyForecast from './helpers/getHourlyForecast';\nimport getDailyForecast from './helpers/getDailyForecast';\nimport getDetailCurrentForecast from './helpers/getDetailCurrentForecast';\nimport Cookies from 'js-cookie'\n\nconst API_KEY = \"b96cf2201d3a30a9889082d993d5610e\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\"\n// const CROSS_URL = \"https://cors-anywhere.herokuapp.com\"\n// const REQUEST_URL = `${CROSS_URL}/${BASE_URL}`;\n\n\nconst useForecast = () => {\n    const tab = [{num :'un'},\n    {num :'un'}    \n];\n    // Cookies.set('favories', tab);\n    // Cookies.remove();\n    // Cookies.set('favories', ['paris','berlin']);\n    const favoriesCookie = Cookies.get('favories');\n\n    // if(favoriesCookie)\n    // {\n    //     console.log(favoriesCookie[0]);\n    //     // favoriesCookie.forEach(function (element,index) {\n    //     //     console.log('index:', index, 'valeur:', element);\n    //     //   });\n\n\n    // }\n    console.log(favoriesCookie);\n\ntab.forEach(function (element, index) {\n  console.log('index:', index, 'valeur:', element);\n});\n\n    const [isError, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [forecast, setForecast] = useState(null);\n    \n    const getCurrentLocationData = async (location) =>{\n        try {\n            const allData = await axios(`${BASE_URL}/weather?q=${location}&units=metric&lang=fr&appid=${API_KEY}`);\n            \n            const data = allData.data;\n            return {data};\n        } catch (error) {\n            return; \n        }       \n    }\n\n    const getDetailLocationData = async (lat,lon) =>{\n        try {\n            const detailData = await axios(`${BASE_URL}/onecall?units=metric&lat=${lat}&lon=${lon}&lang=fr&exclude=minutely&appid=${API_KEY}`);\n\n            const data = detailData;\n        return {data};\n        } catch (error) {\n            return;\n        }\n    }\n\n    const getLocationBase = async (location) => {\n        try {\n            const cityData = await getCurrentLocationData(location); \n\n            const current_data = cityData.data;\n            const Location_lat = cityData.data.coord.lat;\n            const Location_lon = cityData.data.coord.lon;\n            try {\n                const cityDetails= await getDetailLocationData(Location_lat,Location_lon);\n                \n                const dataObject = {current_data : current_data, cityDetails : cityDetails.data.data};\n                return dataObject;\n            } catch (error) {\n                return;\n            }\n        } catch (error) {\n            return; \n        }\n    }\n\n    const deployData = (data) =>{\n        \n        const currentForecast = getCurrentForecast(data.current_data);\n        const hourlyForecast = getHourlyForecast(data.cityDetails.hourly);\n        const daylyForecast = getDailyForecast(data.cityDetails.daily);\n        const alertsForecast = getAlertForecast(data.cityDetails.alerts);\n        const detailCurrentForecast = getDetailCurrentForecast(data.cityDetails.daily[0]);\n\n        setForecast({\n            currentForecast,\n            hourlyForecast,\n            daylyForecast,\n            alertsForecast,\n            detailCurrentForecast\n        });\n        setLoading(false);\n    }\n    // on submit location recup DATA\n    const submitRequest = async location =>{\n        setLoading(true);\n        setError(false);\n        try {\n            const response = await getLocationBase(location);\n            deployData(response);\n        } catch (error) {\n            setError(true);\n            setLoading(false);\n            return;\n        }      \n    }\n\n      return {\n        isError,\n        isLoading,\n        forecast,\n        submitRequest\n    }\n}\n\nexport default useForecast\n"]},"metadata":{},"sourceType":"module"}