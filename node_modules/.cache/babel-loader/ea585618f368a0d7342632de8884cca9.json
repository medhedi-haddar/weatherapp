{"ast":null,"code":"'use strict';\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - the point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost\n * @return {Point} The updated point\n */\n\n\ncore.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition() {\n  var point = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new core.Point();\n  var skipUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n\n  return point;\n};","map":{"version":3,"sources":["../../src/extras/getGlobalPosition.js"],"names":["core","point","skipUpdate"],"mappings":";;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAAYA,I;;;;;;;;;;;;;;;;;;AAEZ;;;;;;;;;;;;;AAWAA,IAAAA,CAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAiD,SAAA,iBAAA,GACjD;AAAA,MAD4EC,KAC5E,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADoF,IAAID,IAAAA,CAAJ,KAAA,EACpF;AAAA,MADsGE,UACtG,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADmH,KACnH;;AACI,MAAI,KAAJ,MAAA,EACA;AACI,SAAA,MAAA,CAAA,QAAA,CAAqB,KAArB,QAAA,EAAA,KAAA,EAAA,UAAA;AAFJ,GAAA,MAKA;AACID,IAAAA,KAAAA,CAAAA,CAAAA,GAAU,KAAA,QAAA,CAAVA,CAAAA;AACAA,IAAAA,KAAAA,CAAAA,CAAAA,GAAU,KAAA,QAAA,CAAVA,CAAAA;AACH;;AAED,SAAA,KAAA;AAZJD,CAAAA","sourcesContent":["import * as core from '../core';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - the point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost\n * @return {Point} The updated point\n */\ncore.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point = new core.Point(), skipUpdate = false)\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"]},"metadata":{},"sourceType":"script"}