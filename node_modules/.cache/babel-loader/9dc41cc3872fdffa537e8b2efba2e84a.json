{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLBlendModesToPixi;\n\nvar _const = require('../../../const');\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\n\n\nfunction mapWebGLBlendModesToPixi(gl) {\n  var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []; // TODO - premultiply alpha would be different.\n  // add a boolean for that!\n\n  array[_const.BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n  array[_const.BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA]; // not-premultiplied blend modes\n\n  array[_const.BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  array[_const.BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  return array;\n}","map":{"version":3,"sources":["../../../../../src/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js"],"names":["mapWebGLBlendModesToPixi","array","gl"],"mappings":"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","sourcesContent":["import { BLEND_MODES } from '../../../const';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapWebGLBlendModesToPixi(gl, array = [])\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    // not-premultiplied blend modes\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n"]},"metadata":{},"sourceType":"script"}