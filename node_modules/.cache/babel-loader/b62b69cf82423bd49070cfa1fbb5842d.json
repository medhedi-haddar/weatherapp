{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @class\n * @memberof PIXI\n */\n\n\nvar WebGLManager = function () {\n  /**\n   * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n   */\n  function WebGLManager(renderer) {\n    _classCallCheck(this, WebGLManager);\n    /**\n     * The renderer this manager works for.\n     *\n     * @member {PIXI.WebGLRenderer}\n     */\n\n\n    this.renderer = renderer;\n    this.renderer.on('context', this.onContextChange, this);\n  }\n  /**\n   * Generic method called when there is a WebGL context change.\n   *\n   */\n\n\n  WebGLManager.prototype.onContextChange = function onContextChange() {} // do some codes init!\n\n  /**\n   * Generic destroy methods to be overridden by the subclass\n   *\n   */\n  ;\n\n  WebGLManager.prototype.destroy = function destroy() {\n    this.renderer.off('context', this.onContextChange, this);\n    this.renderer = null;\n  };\n\n  return WebGLManager;\n}();\n\nexports.default = WebGLManager;","map":{"version":3,"sources":["../../../../../src/core/renderers/webgl/managers/WebGLManager.js"],"names":["WebGLManager","onContextChange","destroy"],"mappings":";;;;;;;;;AAAA;;;;;;IAIqBA,Y;AAEjB;;;AAGA,WAAA,YAAA,CAAA,QAAA,EACA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;AACI;;;;;;;AAKA,SAAA,QAAA,GAAA,QAAA;AAEA,SAAA,QAAA,CAAA,EAAA,CAAA,SAAA,EAA4B,KAA5B,eAAA,EAAA,IAAA;AACH;AAED;;;;;;yBAIAC,e,8BACA,CAEC,C,CADG;;AAGJ;;;;;;yBAIAC,O,sBACA;AACI,SAAA,QAAA,CAAA,GAAA,CAAA,SAAA,EAA6B,KAA7B,eAAA,EAAA,IAAA;AAEA,SAAA,QAAA,GAAA,IAAA;;;;;;kBAlCaF,Y","sourcesContent":["/**\n * @class\n * @memberof PIXI\n */\nexport default class WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        this.renderer.on('context', this.onContextChange, this);\n    }\n\n    /**\n     * Generic method called when there is a WebGL context change.\n     *\n     */\n    onContextChange()\n    {\n        // do some codes init!\n    }\n\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     *\n     */\n    destroy()\n    {\n        this.renderer.off('context', this.onContextChange, this);\n\n        this.renderer = null;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}