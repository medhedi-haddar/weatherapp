{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatInterval = exports.getTimeSinceNewMoon = exports.getPhaseSlot = exports.roundToOnePlace = exports.getPercentIlluminated = exports.radToDeg = exports.degToRad = exports.forceNumber = void 0;\n/*\n * Force a value into a number.\n */\n\nvar forceNumber = function forceNumber(n) {\n  n = Number(n);\n\n  if (isNaN(n) || typeof n === 'undefined') {\n    n = 0;\n  }\n\n  return n;\n};\n/*\n * Convert degrees to radians.\n */\n\n\nexports.forceNumber = forceNumber;\n\nvar degToRad = function degToRad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nexports.degToRad = degToRad;\n\nvar radToDeg = function radToDeg(radians) {\n  return radians * 180 / Math.PI;\n};\n\nexports.radToDeg = radToDeg;\n\nvar getPercentIlluminated = function getPercentIlluminated(moonPhase) {\n  var percent = (1 - Math.cos(moonPhase)) / 2;\n  return percent * 100;\n};\n\nexports.getPercentIlluminated = getPercentIlluminated;\n\nvar roundToOnePlace = function roundToOnePlace(n) {\n  return Math.round(n * 10) / 10;\n};\n/*\n * Given the exact moon phase, return the broad bucket that this\n * phase is called in this interactive. This is used to keep the\n * phase dropdown up to date with the current scenario.\n *\n * The waning and waxing slots are larger than the others.\n *\n * Here's a visualization of moonPhase is represented. The circle\n * is the orbit of the moon around the sun - seen in MainView.\n * This is in degrees, but the moonPhase state value is in radians.\n * Units are interchangeable.\n *\n * The sun is to the left of the diagram, so at 0 degrees, the moon is\n * fully illuminated by the sun to the earth's perspective, making a\n * full moon.\n *\n *\n *                  90\n *\n *             . -- ~~~ -- .\n *         .-~               ~-.\n *        /                     \\\n *       /         .____.        \\\n *  180 |         /      \\        |\n * -180 |        (  earth )       | 0\n *      |         \\      /        |\n *       \\          `---`        /\n *        \\                     /\n *         `-.               .-'\n *             ~- . ___ . -~\n *\n *                  -90\n *\n *\n * New Moon, Full Moon, and the first and third quarters are more\n * specific, narrow events in reality, so these are represented by\n * only 5 degrees around this orbit. The waxing and waning phases\n * take up the rest of the orbit.\n */\n\n\nexports.roundToOnePlace = roundToOnePlace;\n\nvar getPhaseSlot = function getPhaseSlot(moonPhase) {\n  var phase = radToDeg(moonPhase); // New Moon\n\n  if (Math.abs(phase - 180) < 5 || Math.abs(phase + 180) < 5) {\n    return 180;\n  } // First Quarter\n\n\n  if (Math.abs(phase + 90) < 5) {\n    return -90;\n  } // Full Moon\n\n\n  if (Math.abs(phase) < 5) {\n    return 0;\n  } // Third Quarter\n\n\n  if (Math.abs(phase - 90) < 5) {\n    return 90;\n  } // Waxing Crescent\n\n\n  if (Math.abs(phase + 135) < 45) {\n    return -135;\n  } // Waxing Gibbous\n\n\n  if (Math.abs(phase + 45) < 45) {\n    return -45;\n  } // Waning Gibbous\n\n\n  if (Math.abs(phase - 45) < 45) {\n    return 45;\n  } // Waning Crescent\n\n\n  if (Math.abs(phase - 135) < 45) {\n    return 135;\n  } // error\n\n\n  return null;\n};\n/*\n * Given the moon phase (some point along the moon's 360-degree\n * orbit), return the time, in hours, since it's been a New Moon (180\n * degrees).\n *\n * The moon's synodic period is 29.530589 days, or 708.734136 hours,\n * so that's how long it takes for the moon to complete its orbit\n * around the earth. So, this time interval can be computed with the\n * moonPhase value.\n */\n\n\nexports.getPhaseSlot = getPhaseSlot;\n\nvar getTimeSinceNewMoon = function getTimeSinceNewMoon(phase) {\n  return (phase + Math.PI) / (Math.PI * 2 / 708.734136);\n};\n/*\n * Given a time interval in hours, shorten it by displaying days and\n * hours.\n */\n\n\nexports.getTimeSinceNewMoon = getTimeSinceNewMoon;\n\nvar formatInterval = function formatInterval(i) {\n  var quotient = Math.floor(i / 24);\n  var remainder = i % 24;\n  var quotientPlural = quotient === 1 ? '' : 's';\n  var remainderPlural = remainder === 1 ? '' : 's';\n\n  if (quotient) {\n    return \"\".concat(quotient, \" day\").concat(quotientPlural, \", \").concat(remainder, \" hour\").concat(remainderPlural);\n  } else {\n    return \"\".concat(remainder, \" hour\").concat(remainderPlural);\n  }\n};\n\nexports.formatInterval = formatInterval;","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/node_modules/react-moonphase/build/utils.js"],"names":["Object","defineProperty","exports","value","formatInterval","getTimeSinceNewMoon","getPhaseSlot","roundToOnePlace","getPercentIlluminated","radToDeg","degToRad","forceNumber","n","Number","isNaN","degrees","Math","PI","radians","moonPhase","percent","cos","round","phase","abs","i","quotient","floor","remainder","quotientPlural","remainderPlural","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatInterval = exports.getTimeSinceNewMoon = exports.getPhaseSlot = exports.roundToOnePlace = exports.getPercentIlluminated = exports.radToDeg = exports.degToRad = exports.forceNumber = void 0;\n\n/*\n * Force a value into a number.\n */\nvar forceNumber = function forceNumber(n) {\n  n = Number(n);\n\n  if (isNaN(n) || typeof n === 'undefined') {\n    n = 0;\n  }\n\n  return n;\n};\n/*\n * Convert degrees to radians.\n */\n\n\nexports.forceNumber = forceNumber;\n\nvar degToRad = function degToRad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nexports.degToRad = degToRad;\n\nvar radToDeg = function radToDeg(radians) {\n  return radians * 180 / Math.PI;\n};\n\nexports.radToDeg = radToDeg;\n\nvar getPercentIlluminated = function getPercentIlluminated(moonPhase) {\n  var percent = (1 - Math.cos(moonPhase)) / 2;\n  return percent * 100;\n};\n\nexports.getPercentIlluminated = getPercentIlluminated;\n\nvar roundToOnePlace = function roundToOnePlace(n) {\n  return Math.round(n * 10) / 10;\n};\n/*\n * Given the exact moon phase, return the broad bucket that this\n * phase is called in this interactive. This is used to keep the\n * phase dropdown up to date with the current scenario.\n *\n * The waning and waxing slots are larger than the others.\n *\n * Here's a visualization of moonPhase is represented. The circle\n * is the orbit of the moon around the sun - seen in MainView.\n * This is in degrees, but the moonPhase state value is in radians.\n * Units are interchangeable.\n *\n * The sun is to the left of the diagram, so at 0 degrees, the moon is\n * fully illuminated by the sun to the earth's perspective, making a\n * full moon.\n *\n *\n *                  90\n *\n *             . -- ~~~ -- .\n *         .-~               ~-.\n *        /                     \\\n *       /         .____.        \\\n *  180 |         /      \\        |\n * -180 |        (  earth )       | 0\n *      |         \\      /        |\n *       \\          `---`        /\n *        \\                     /\n *         `-.               .-'\n *             ~- . ___ . -~\n *\n *                  -90\n *\n *\n * New Moon, Full Moon, and the first and third quarters are more\n * specific, narrow events in reality, so these are represented by\n * only 5 degrees around this orbit. The waxing and waning phases\n * take up the rest of the orbit.\n */\n\n\nexports.roundToOnePlace = roundToOnePlace;\n\nvar getPhaseSlot = function getPhaseSlot(moonPhase) {\n  var phase = radToDeg(moonPhase); // New Moon\n\n  if (Math.abs(phase - 180) < 5 || Math.abs(phase + 180) < 5) {\n    return 180;\n  } // First Quarter\n\n\n  if (Math.abs(phase + 90) < 5) {\n    return -90;\n  } // Full Moon\n\n\n  if (Math.abs(phase) < 5) {\n    return 0;\n  } // Third Quarter\n\n\n  if (Math.abs(phase - 90) < 5) {\n    return 90;\n  } // Waxing Crescent\n\n\n  if (Math.abs(phase + 135) < 45) {\n    return -135;\n  } // Waxing Gibbous\n\n\n  if (Math.abs(phase + 45) < 45) {\n    return -45;\n  } // Waning Gibbous\n\n\n  if (Math.abs(phase - 45) < 45) {\n    return 45;\n  } // Waning Crescent\n\n\n  if (Math.abs(phase - 135) < 45) {\n    return 135;\n  } // error\n\n\n  return null;\n};\n/*\n * Given the moon phase (some point along the moon's 360-degree\n * orbit), return the time, in hours, since it's been a New Moon (180\n * degrees).\n *\n * The moon's synodic period is 29.530589 days, or 708.734136 hours,\n * so that's how long it takes for the moon to complete its orbit\n * around the earth. So, this time interval can be computed with the\n * moonPhase value.\n */\n\n\nexports.getPhaseSlot = getPhaseSlot;\n\nvar getTimeSinceNewMoon = function getTimeSinceNewMoon(phase) {\n  return (phase + Math.PI) / (Math.PI * 2 / 708.734136);\n};\n/*\n * Given a time interval in hours, shorten it by displaying days and\n * hours.\n */\n\n\nexports.getTimeSinceNewMoon = getTimeSinceNewMoon;\n\nvar formatInterval = function formatInterval(i) {\n  var quotient = Math.floor(i / 24);\n  var remainder = i % 24;\n  var quotientPlural = quotient === 1 ? '' : 's';\n  var remainderPlural = remainder === 1 ? '' : 's';\n\n  if (quotient) {\n    return \"\".concat(quotient, \" day\").concat(quotientPlural, \", \").concat(remainder, \" hour\").concat(remainderPlural);\n  } else {\n    return \"\".concat(remainder, \" hour\").concat(remainderPlural);\n  }\n};\n\nexports.formatInterval = formatInterval;"]},"metadata":{},"sourceType":"script"}