{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.loader = exports.prepare = exports.particles = exports.mesh = exports.loaders = exports.interaction = exports.filters = exports.extras = exports.extract = exports.accessibility = undefined;\n\nvar _polyfill = require('./polyfill');\n\nObject.keys(_polyfill).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _polyfill[key];\n    }\n  });\n});\n\nvar _core = require('./core');\n\nObject.keys(_core).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _core[key];\n    }\n  });\n});\n\nvar _deprecation = require('./deprecation');\n\nvar _deprecation2 = _interopRequireDefault(_deprecation);\n\nvar _accessibility = require('./accessibility');\n\nvar accessibility = _interopRequireWildcard(_accessibility);\n\nvar _extract = require('./extract');\n\nvar extract = _interopRequireWildcard(_extract);\n\nvar _extras = require('./extras');\n\nvar extras = _interopRequireWildcard(_extras);\n\nvar _filters = require('./filters');\n\nvar filters = _interopRequireWildcard(_filters);\n\nvar _interaction = require('./interaction');\n\nvar interaction = _interopRequireWildcard(_interaction);\n\nvar _loaders = require('./loaders');\n\nvar loaders = _interopRequireWildcard(_loaders);\n\nvar _mesh = require('./mesh');\n\nvar mesh = _interopRequireWildcard(_mesh);\n\nvar _particles = require('./particles');\n\nvar particles = _interopRequireWildcard(_particles);\n\nvar _prepare = require('./prepare');\n\nvar prepare = _interopRequireWildcard(_prepare);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // export core\n\n\n_core.utils.mixins.performMixins();\n/**\n * Alias for {@link PIXI.loaders.shared}.\n * @name loader\n * @memberof PIXI\n * @type {PIXI.loader.Loader}\n */\n// handle mixins now, after all code has been added, including deprecation\n// export libs\n// import polyfills. Done as an export to make sure polyfills are imported first\n\n\nvar loader = loaders.shared || null;\nexports.accessibility = accessibility;\nexports.extract = extract;\nexports.extras = extras;\nexports.filters = filters;\nexports.interaction = interaction;\nexports.loaders = loaders;\nexports.mesh = mesh;\nexports.particles = particles;\nexports.prepare = prepare;\nexports.loader = loader; // Apply the deprecations\n\nif (typeof _deprecation2.default === 'function') {\n  (0, _deprecation2.default)(exports);\n} // Always export PixiJS globally.\n\n\nglobal.PIXI = exports; // eslint-disable-line","map":{"version":3,"sources":["../src/index.js"],"names":["accessibility","extract","extras","filters","interaction","loaders","mesh","particles","prepare","loader","global"],"mappings":";;;;;;;AACA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AAAA,MAAA,GAAA,KAAA,SAAA,IAAA,GAAA,KAAA,YAAA,EAAA;AAAA,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,GAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AAAA,aAAA,SAAA,CAAA,GAAA,CAAA;AAAA;AAAA,GAAA;AAAA,CAAA;;;;AAGA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AAAA,MAAA,GAAA,KAAA,SAAA,IAAA,GAAA,KAAA,YAAA,EAAA;AAAA,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,GAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AAAA,aAAA,KAAA,CAAA,GAAA,CAAA;AAAA;AAAA,GAAA;AAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;IAAYA,a;;AACZ,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAAYC,O;;AACZ,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;IAAYC,M;;AACZ,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAAYC,O;;AACZ,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;IAAYC,W;;AACZ,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAAYC,O;;AACZ,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;IAAYC,I;;AACZ,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;IAAYC,S;;AACZ,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAAYC,O;;;;;;;;;;;;;;;;;;;;;;;EAbZ;;;AAiBA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,aAAA;AAEA;;;;;;AAJA;AAZA;AANA;;;AA4BA,IAAMC,MAAAA,GAASJ,OAAAA,CAAAA,MAAAA,IAAf,IAAA;QAGIL,a,GAAAA,a;QACAC,O,GAAAA,O;QACAC,M,GAAAA,M;QACAC,O,GAAAA,O;QACAC,W,GAAAA,W;QACAC,O,GAAAA,O;QACAC,I,GAAAA,I;QACAC,S,GAAAA,S;QACAC,O,GAAAA,O;QACAC,M,GAAAA,M,EAGJ;;AACA,IAAI,OAAA,aAAA,CAAA,OAAA,KAAJ,UAAA,EACA;AACI,GAAA,GAAA,aAAA,CAAA,OAAA,EAAA,OAAA;AACH,C,CAED;;;AACAC,MAAAA,CAAAA,IAAAA,GAAAA,OAAAA,C,CAAuB","sourcesContent":["// import polyfills. Done as an export to make sure polyfills are imported first\nexport * from './polyfill';\n\n// export core\nexport * from './core';\n\n// export libs\nimport deprecation from './deprecation';\nimport * as accessibility from './accessibility';\nimport * as extract from './extract';\nimport * as extras from './extras';\nimport * as filters from './filters';\nimport * as interaction from './interaction';\nimport * as loaders from './loaders';\nimport * as mesh from './mesh';\nimport * as particles from './particles';\nimport * as prepare from './prepare';\n\n// handle mixins now, after all code has been added, including deprecation\nimport { utils } from './core';\nutils.mixins.performMixins();\n\n/**\n * Alias for {@link PIXI.loaders.shared}.\n * @name loader\n * @memberof PIXI\n * @type {PIXI.loader.Loader}\n */\nconst loader = loaders.shared || null;\n\nexport {\n    accessibility,\n    extract,\n    extras,\n    filters,\n    interaction,\n    loaders,\n    mesh,\n    particles,\n    prepare,\n    loader,\n};\n\n// Apply the deprecations\nif (typeof deprecation === 'function')\n{\n    deprecation(exports);\n}\n\n// Always export PixiJS globally.\nglobal.PIXI = exports; // eslint-disable-line\n\n"]},"metadata":{},"sourceType":"script"}