{"ast":null,"code":"// state object//\nvar setVertexAttribArrays = require('./setVertexAttribArrays');\n/**\n * Helper class to work with WebGL VertexArrayObjects (vaos)\n * Only works if WebGL extensions are enabled (they usually are)\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n */\n\n\nfunction VertexArrayObject(gl, state) {\n  this.nativeVaoExtension = null;\n\n  if (!VertexArrayObject.FORCE_NATIVE) {\n    this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') || gl.getExtension('MOZ_OES_vertex_array_object') || gl.getExtension('WEBKIT_OES_vertex_array_object');\n  }\n\n  this.nativeState = state;\n\n  if (this.nativeVaoExtension) {\n    this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\n    var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS); // VAO - overwrite the state..\n\n    this.nativeState = {\n      tempAttribState: new Array(maxAttribs),\n      attribState: new Array(maxAttribs)\n    };\n  }\n  /**\n   * The current WebGL rendering context\n   *\n   * @member {WebGLRenderingContext}\n   */\n\n\n  this.gl = gl;\n  /**\n   * An array of attributes\n   *\n   * @member {Array}\n   */\n\n  this.attributes = [];\n  /**\n   * @member {PIXI.glCore.GLBuffer}\n   */\n\n  this.indexBuffer = null;\n  /**\n   * A boolean flag\n   *\n   * @member {Boolean}\n   */\n\n  this.dirty = false;\n}\n\nVertexArrayObject.prototype.constructor = VertexArrayObject;\nmodule.exports = VertexArrayObject;\n/**\n* Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n* If you find on older devices that things have gone a bit weird then set this to true.\n*/\n\n/**\n * Lets the VAO know if you should use the WebGL extension or the native methods.\n * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n * If you find on older devices that things have gone a bit weird then set this to true.\n * @static\n * @property {Boolean} FORCE_NATIVE\n */\n\nVertexArrayObject.FORCE_NATIVE = false;\n/**\n * Binds the buffer\n */\n\nVertexArrayObject.prototype.bind = function () {\n  if (this.nativeVao) {\n    this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n\n    if (this.dirty) {\n      this.dirty = false;\n      this.activate();\n      return this;\n    }\n\n    if (this.indexBuffer) {\n      this.indexBuffer.bind();\n    }\n  } else {\n    this.activate();\n  }\n\n  return this;\n};\n/**\n * Unbinds the buffer\n */\n\n\nVertexArrayObject.prototype.unbind = function () {\n  if (this.nativeVao) {\n    this.nativeVaoExtension.bindVertexArrayOES(null);\n  }\n\n  return this;\n};\n/**\n * Uses this vao\n */\n\n\nVertexArrayObject.prototype.activate = function () {\n  var gl = this.gl;\n  var lastBuffer = null;\n\n  for (var i = 0; i < this.attributes.length; i++) {\n    var attrib = this.attributes[i];\n\n    if (lastBuffer !== attrib.buffer) {\n      attrib.buffer.bind();\n      lastBuffer = attrib.buffer;\n    }\n\n    gl.vertexAttribPointer(attrib.attribute.location, attrib.attribute.size, attrib.type || gl.FLOAT, attrib.normalized || false, attrib.stride || 0, attrib.start || 0);\n  }\n\n  setVertexAttribArrays(gl, this.attributes, this.nativeState);\n\n  if (this.indexBuffer) {\n    this.indexBuffer.bind();\n  }\n\n  return this;\n};\n/**\n *\n * @param buffer     {PIXI.gl.GLBuffer}\n * @param attribute  {*}\n * @param type       {String}\n * @param normalized {Boolean}\n * @param stride     {Number}\n * @param start      {Number}\n */\n\n\nVertexArrayObject.prototype.addAttribute = function (buffer, attribute, type, normalized, stride, start) {\n  this.attributes.push({\n    buffer: buffer,\n    attribute: attribute,\n    location: attribute.location,\n    type: type || this.gl.FLOAT,\n    normalized: normalized || false,\n    stride: stride || 0,\n    start: start || 0\n  });\n  this.dirty = true;\n  return this;\n};\n/**\n *\n * @param buffer   {PIXI.gl.GLBuffer}\n */\n\n\nVertexArrayObject.prototype.addIndex = function (buffer\n/*, options*/\n) {\n  this.indexBuffer = buffer;\n  this.dirty = true;\n  return this;\n};\n/**\n * Unbinds this vao and disables it\n */\n\n\nVertexArrayObject.prototype.clear = function () {\n  // var gl = this.gl;\n  // TODO - should this function unbind after clear?\n  // for now, no but lets see what happens in the real world!\n  if (this.nativeVao) {\n    this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n  }\n\n  this.attributes.length = 0;\n  this.indexBuffer = null;\n  return this;\n};\n/**\n * @param type  {Number}\n * @param size  {Number}\n * @param start {Number}\n */\n\n\nVertexArrayObject.prototype.draw = function (type, size, start) {\n  var gl = this.gl;\n\n  if (this.indexBuffer) {\n    gl.drawElements(type, size || this.indexBuffer.data.length, gl.UNSIGNED_SHORT, (start || 0) * 2);\n  } else {\n    // TODO need a better way to calculate size..\n    gl.drawArrays(type, start, size || this.getSize());\n  }\n\n  return this;\n};\n/**\n * Destroy this vao\n */\n\n\nVertexArrayObject.prototype.destroy = function () {\n  // lose references\n  this.gl = null;\n  this.indexBuffer = null;\n  this.attributes = null;\n  this.nativeState = null;\n\n  if (this.nativeVao) {\n    this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\n  }\n\n  this.nativeVaoExtension = null;\n  this.nativeVao = null;\n};\n\nVertexArrayObject.prototype.getSize = function () {\n  var attrib = this.attributes[0];\n  return attrib.buffer.data.length / (attrib.stride / 4 || attrib.attribute.size);\n};","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/node_modules/pixi-gl-core/src/VertexArrayObject.js"],"names":["setVertexAttribArrays","require","VertexArrayObject","gl","state","nativeVaoExtension","FORCE_NATIVE","getExtension","nativeState","nativeVao","createVertexArrayOES","maxAttribs","getParameter","MAX_VERTEX_ATTRIBS","tempAttribState","Array","attribState","attributes","indexBuffer","dirty","prototype","constructor","module","exports","bind","bindVertexArrayOES","activate","unbind","lastBuffer","i","length","attrib","buffer","vertexAttribPointer","attribute","location","size","type","FLOAT","normalized","stride","start","addAttribute","push","addIndex","clear","draw","drawElements","data","UNSIGNED_SHORT","drawArrays","getSize","destroy","deleteVertexArrayOES"],"mappings":"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","sourcesContent":["\n// state object//\nvar setVertexAttribArrays = require( './setVertexAttribArrays' );\n\n/**\n * Helper class to work with WebGL VertexArrayObjects (vaos)\n * Only works if WebGL extensions are enabled (they usually are)\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n */\nfunction VertexArrayObject(gl, state)\n{\n    this.nativeVaoExtension = null;\n\n    if(!VertexArrayObject.FORCE_NATIVE)\n    {\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') ||\n                                  gl.getExtension('MOZ_OES_vertex_array_object') ||\n                                  gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    this.nativeState = state;\n\n    if(this.nativeVaoExtension)\n    {\n        this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\n\n        var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        // VAO - overwrite the state..\n        this.nativeState = {\n            tempAttribState: new Array(maxAttribs),\n            attribState: new Array(maxAttribs)\n        };\n    }\n\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of attributes\n     *\n     * @member {Array}\n     */\n    this.attributes = [];\n\n    /**\n     * @member {PIXI.glCore.GLBuffer}\n     */\n    this.indexBuffer = null;\n\n    /**\n     * A boolean flag\n     *\n     * @member {Boolean}\n     */\n    this.dirty = false;\n}\n\nVertexArrayObject.prototype.constructor = VertexArrayObject;\nmodule.exports = VertexArrayObject;\n\n/**\n* Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n* If you find on older devices that things have gone a bit weird then set this to true.\n*/\n/**\n * Lets the VAO know if you should use the WebGL extension or the native methods.\n * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n * If you find on older devices that things have gone a bit weird then set this to true.\n * @static\n * @property {Boolean} FORCE_NATIVE\n */\nVertexArrayObject.FORCE_NATIVE = false;\n\n/**\n * Binds the buffer\n */\nVertexArrayObject.prototype.bind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n\n        if(this.dirty)\n        {\n            this.dirty = false;\n            this.activate();\n            return this;\n        }\n        if (this.indexBuffer)\n        {\n            this.indexBuffer.bind();\n        }\n    }\n    else\n    {\n        this.activate();\n    }\n\n    return this;\n};\n\n/**\n * Unbinds the buffer\n */\nVertexArrayObject.prototype.unbind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(null);\n    }\n\n    return this;\n};\n\n/**\n * Uses this vao\n */\nVertexArrayObject.prototype.activate = function()\n{\n\n    var gl = this.gl;\n    var lastBuffer = null;\n\n    for (var i = 0; i < this.attributes.length; i++)\n    {\n        var attrib = this.attributes[i];\n\n        if(lastBuffer !== attrib.buffer)\n        {\n            attrib.buffer.bind();\n            lastBuffer = attrib.buffer;\n        }\n\n        gl.vertexAttribPointer(attrib.attribute.location,\n                               attrib.attribute.size,\n                               attrib.type || gl.FLOAT,\n                               attrib.normalized || false,\n                               attrib.stride || 0,\n                               attrib.start || 0);\n    }\n\n    setVertexAttribArrays(gl, this.attributes, this.nativeState);\n\n    if(this.indexBuffer)\n    {\n        this.indexBuffer.bind();\n    }\n\n    return this;\n};\n\n/**\n *\n * @param buffer     {PIXI.gl.GLBuffer}\n * @param attribute  {*}\n * @param type       {String}\n * @param normalized {Boolean}\n * @param stride     {Number}\n * @param start      {Number}\n */\nVertexArrayObject.prototype.addAttribute = function(buffer, attribute, type, normalized, stride, start)\n{\n    this.attributes.push({\n        buffer:     buffer,\n        attribute:  attribute,\n\n        location:   attribute.location,\n        type:       type || this.gl.FLOAT,\n        normalized: normalized || false,\n        stride:     stride || 0,\n        start:      start || 0\n    });\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n *\n * @param buffer   {PIXI.gl.GLBuffer}\n */\nVertexArrayObject.prototype.addIndex = function(buffer/*, options*/)\n{\n    this.indexBuffer = buffer;\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Unbinds this vao and disables it\n */\nVertexArrayObject.prototype.clear = function()\n{\n    // var gl = this.gl;\n\n    // TODO - should this function unbind after clear?\n    // for now, no but lets see what happens in the real world!\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n    }\n\n    this.attributes.length = 0;\n    this.indexBuffer = null;\n\n    return this;\n};\n\n/**\n * @param type  {Number}\n * @param size  {Number}\n * @param start {Number}\n */\nVertexArrayObject.prototype.draw = function(type, size, start)\n{\n    var gl = this.gl;\n\n    if(this.indexBuffer)\n    {\n        gl.drawElements(type, size || this.indexBuffer.data.length, gl.UNSIGNED_SHORT, (start || 0) * 2 );\n    }\n    else\n    {\n        // TODO need a better way to calculate size..\n        gl.drawArrays(type, start, size || this.getSize());\n    }\n\n    return this;\n};\n\n/**\n * Destroy this vao\n */\nVertexArrayObject.prototype.destroy = function()\n{\n    // lose references\n    this.gl = null;\n    this.indexBuffer = null;\n    this.attributes = null;\n    this.nativeState = null;\n\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\n    }\n\n    this.nativeVaoExtension = null;\n    this.nativeVao = null;\n};\n\nVertexArrayObject.prototype.getSize = function()\n{\n    var attrib = this.attributes[0];\n    return attrib.buffer.data.length / (( attrib.stride/4 ) || attrib.attribute.size);\n};\n"]},"metadata":{},"sourceType":"script"}