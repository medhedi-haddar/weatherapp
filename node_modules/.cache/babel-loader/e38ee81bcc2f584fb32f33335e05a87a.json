{"ast":null,"code":"'use strict'; // References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\nvar ONE_FRAME_TIME = 16; // Date.now\n\nif (!(Date.now && Date.prototype.getTime)) {\n  Date.now = function now() {\n    return new Date().getTime();\n  };\n} // performance.now\n\n\nif (!(global.performance && global.performance.now)) {\n  var startTime = Date.now();\n\n  if (!global.performance) {\n    global.performance = {};\n  }\n\n  global.performance.now = function () {\n    return Date.now() - startTime;\n  };\n} // requestAnimationFrame\n\n\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n  var p = vendors[x];\n  global.requestAnimationFrame = global[p + 'RequestAnimationFrame'];\n  global.cancelAnimationFrame = global[p + 'CancelAnimationFrame'] || global[p + 'CancelRequestAnimationFrame'];\n}\n\nif (!global.requestAnimationFrame) {\n  global.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + 'is not a function');\n    }\n\n    var currentTime = Date.now();\n    var delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n    if (delay < 0) {\n      delay = 0;\n    }\n\n    lastTime = currentTime;\n    return setTimeout(function () {\n      lastTime = Date.now();\n      callback(performance.now());\n    }, delay);\n  };\n}\n\nif (!global.cancelAnimationFrame) {\n  global.cancelAnimationFrame = function (id) {\n    return clearTimeout(id);\n  };\n}","map":{"version":3,"sources":["../../src/polyfill/requestAnimationFrame.js"],"names":["ONE_FRAME_TIME","Date","global","startTime","lastTime","vendors","x","p","callback","currentTime","delay","performance","clearTimeout"],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMA,cAAAA,GAAN,EAAA,C,CAEA;;AACA,IAAI,EAAEC,IAAAA,CAAAA,GAAAA,IAAYA,IAAAA,CAAAA,SAAAA,CAAlB,OAAI,CAAJ,EACA;AACIA,EAAAA,IAAAA,CAAAA,GAAAA,GAAW,SAAA,GAAA,GACX;AACI,WAAO,IAAA,IAAA,GAAP,OAAO,EAAP;AAFJA,GAAAA;AAIH,C,CAED;;;AACA,IAAI,EAAEC,MAAAA,CAAAA,WAAAA,IAAsBA,MAAAA,CAAAA,WAAAA,CAA5B,GAAI,CAAJ,EACA;AACI,MAAMC,SAAAA,GAAYF,IAAAA,CAAlB,GAAkBA,EAAlB;;AAEA,MAAI,CAACC,MAAAA,CAAL,WAAA,EACA;AACIA,IAAAA,MAAAA,CAAAA,WAAAA,GAAAA,EAAAA;AACH;;AAEDA,EAAAA,MAAAA,CAAAA,WAAAA,CAAAA,GAAAA,GAAyB,YAAA;AAAA,WAAMD,IAAAA,CAAAA,GAAAA,KAAN,SAAA;AAAzBC,GAAAA;AACH,C,CAED;;;AACA,IAAIE,QAAAA,GAAWH,IAAAA,CAAf,GAAeA,EAAf;AACA,IAAMI,OAAAA,GAAU,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAhB,GAAgB,CAAhB;;AAEA,KAAK,IAAIC,CAAAA,GAAT,CAAA,EAAgBA,CAAAA,GAAID,OAAAA,CAAJC,MAAAA,IAAsB,CAACJ,MAAAA,CAAvC,qBAAA,EAAqE,EAArE,CAAA,EACA;AACI,MAAMK,CAAAA,GAAIF,OAAAA,CAAV,CAAUA,CAAV;AAEAH,EAAAA,MAAAA,CAAAA,qBAAAA,GAA+BA,MAAAA,CAAUK,CAAVL,GAA/BA,uBAA+BA,CAA/BA;AACAA,EAAAA,MAAAA,CAAAA,oBAAAA,GAA8BA,MAAAA,CAAUK,CAAVL,GAAAA,sBAAAA,CAAAA,IAAsCA,MAAAA,CAAUK,CAAVL,GAApEA,6BAAoEA,CAApEA;AACH;;AAED,IAAI,CAACA,MAAAA,CAAL,qBAAA,EACA;AACIA,EAAAA,MAAAA,CAAAA,qBAAAA,GAA+B,UAAA,QAAA,EAC/B;AACI,QAAI,OAAA,QAAA,KAAJ,UAAA,EACA;AACI,YAAM,IAAA,SAAA,CAAiBM,QAAjB,GAAN,mBAAM,CAAN;AACH;;AAED,QAAMC,WAAAA,GAAcR,IAAAA,CAApB,GAAoBA,EAApB;AACA,QAAIS,KAAAA,GAAQV,cAAAA,GAAAA,QAAAA,GAAZ,WAAA;;AAEA,QAAIU,KAAAA,GAAJ,CAAA,EACA;AACIA,MAAAA,KAAAA,GAAAA,CAAAA;AACH;;AAEDN,IAAAA,QAAAA,GAAAA,WAAAA;AAEA,WAAO,UAAA,CAAW,YAClB;AACIA,MAAAA,QAAAA,GAAWH,IAAAA,CAAXG,GAAWH,EAAXG;AACAI,MAAAA,QAAAA,CAASG,WAAAA,CAATH,GAASG,EAATH,CAAAA;AAHG,KAAA,EAAP,KAAO,CAAP;AAjBJN,GAAAA;AAuBH;;AAED,IAAI,CAACA,MAAAA,CAAL,oBAAA,EACA;AACIA,EAAAA,MAAAA,CAAAA,oBAAAA,GAA8B,UAAA,EAAA,EAAA;AAAA,WAAQU,YAAAA,CAAR,EAAQA,CAAR;AAA9BV,GAAAA;AACH","sourcesContent":["// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\nconst ONE_FRAME_TIME = 16;\n\n// Date.now\nif (!(Date.now && Date.prototype.getTime))\n{\n    Date.now = function now()\n    {\n        return new Date().getTime();\n    };\n}\n\n// performance.now\nif (!(global.performance && global.performance.now))\n{\n    const startTime = Date.now();\n\n    if (!global.performance)\n    {\n        global.performance = {};\n    }\n\n    global.performance.now = () => Date.now() - startTime;\n}\n\n// requestAnimationFrame\nlet lastTime = Date.now();\nconst vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (let x = 0; x < vendors.length && !global.requestAnimationFrame; ++x)\n{\n    const p = vendors[x];\n\n    global.requestAnimationFrame = global[`${p}RequestAnimationFrame`];\n    global.cancelAnimationFrame = global[`${p}CancelAnimationFrame`] || global[`${p}CancelRequestAnimationFrame`];\n}\n\nif (!global.requestAnimationFrame)\n{\n    global.requestAnimationFrame = (callback) =>\n    {\n        if (typeof callback !== 'function')\n        {\n            throw new TypeError(`${callback}is not a function`);\n        }\n\n        const currentTime = Date.now();\n        let delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n        if (delay < 0)\n        {\n            delay = 0;\n        }\n\n        lastTime = currentTime;\n\n        return setTimeout(() =>\n        {\n            lastTime = Date.now();\n            callback(performance.now());\n        }, delay);\n    };\n}\n\nif (!global.cancelAnimationFrame)\n{\n    global.cancelAnimationFrame = (id) => clearTimeout(id);\n}\n"]},"metadata":{},"sourceType":"script"}