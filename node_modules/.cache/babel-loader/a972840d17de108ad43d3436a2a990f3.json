{"ast":null,"code":"var compileProgram = require('./shader/compileProgram'),\n    extractAttributes = require('./shader/extractAttributes'),\n    extractUniforms = require('./shader/extractUniforms'),\n    setPrecision = require('./shader/setPrecision'),\n    generateUniformAccessObject = require('./shader/generateUniformAccessObject');\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param precision {string} The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n * @param attributeLocations {object} A key value pair showing which location eact attribute should sit eg {position:0, uvs:1}\n */\n\n\nvar Shader = function (gl, vertexSrc, fragmentSrc, precision, attributeLocations) {\n  /**\n   * The current WebGL rendering context\n   *\n   * @member {WebGLRenderingContext}\n   */\n  this.gl = gl;\n\n  if (precision) {\n    vertexSrc = setPrecision(vertexSrc, precision);\n    fragmentSrc = setPrecision(fragmentSrc, precision);\n  }\n  /**\n   * The shader program\n   *\n   * @member {WebGLProgram}\n   */\n  // First compile the program..\n\n\n  this.program = compileProgram(gl, vertexSrc, fragmentSrc, attributeLocations);\n  /**\n   * The attributes of the shader as an object containing the following properties\n   * {\n   * \ttype,\n   * \tsize,\n   * \tlocation,\n   * \tpointer\n   * }\n   * @member {Object}\n   */\n  // next extract the attributes\n\n  this.attributes = extractAttributes(gl, this.program);\n  this.uniformData = extractUniforms(gl, this.program);\n  /**\n   * The uniforms of the shader as an object containing the following properties\n   * {\n   * \tgl,\n   * \tdata\n   * }\n   * @member {Object}\n   */\n\n  this.uniforms = generateUniformAccessObject(gl, this.uniformData);\n};\n/**\n * Uses this shader\n * \n * @return {PIXI.glCore.GLShader} Returns itself.\n */\n\n\nShader.prototype.bind = function () {\n  this.gl.useProgram(this.program);\n  return this;\n};\n/**\n * Destroys this shader\n * TODO\n */\n\n\nShader.prototype.destroy = function () {\n  this.attributes = null;\n  this.uniformData = null;\n  this.uniforms = null;\n  var gl = this.gl;\n  gl.deleteProgram(this.program);\n};\n\nmodule.exports = Shader;","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/node_modules/pixi-gl-core/src/GLShader.js"],"names":["compileProgram","require","extractAttributes","extractUniforms","setPrecision","generateUniformAccessObject","Shader","gl","vertexSrc","fragmentSrc","precision","attributeLocations","program","attributes","uniformData","uniforms","prototype","bind","useProgram","destroy","deleteProgram","module","exports"],"mappings":"AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,yBAAD,CAA5B;AAAA,IACCC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAD5B;AAAA,IAECE,eAAe,GAAGF,OAAO,CAAC,0BAAD,CAF1B;AAAA,IAGCG,YAAY,GAAGH,OAAO,CAAC,uBAAD,CAHvB;AAAA,IAICI,2BAA2B,GAAGJ,OAAO,CAAC,sCAAD,CAJtC;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,MAAM,GAAG,UAASC,EAAT,EAAaC,SAAb,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,kBAAhD,EACb;AACC;AACD;AACA;AACA;AACA;AACC,OAAKJ,EAAL,GAAUA,EAAV;;AAEA,MAAGG,SAAH,EACA;AACCF,IAAAA,SAAS,GAAGJ,YAAY,CAACI,SAAD,EAAYE,SAAZ,CAAxB;AACAD,IAAAA,WAAW,GAAGL,YAAY,CAACK,WAAD,EAAcC,SAAd,CAA1B;AACA;AAED;AACD;AACA;AACA;AACA;AACC;;;AACA,OAAKE,OAAL,GAAeZ,cAAc,CAACO,EAAD,EAAKC,SAAL,EAAgBC,WAAhB,EAA6BE,kBAA7B,CAA7B;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AACA,OAAKE,UAAL,GAAkBX,iBAAiB,CAACK,EAAD,EAAK,KAAKK,OAAV,CAAnC;AAEG,OAAKE,WAAL,GAAmBX,eAAe,CAACI,EAAD,EAAK,KAAKK,OAAV,CAAlC;AAEH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,OAAKG,QAAL,GAAgBV,2BAA2B,CAAEE,EAAF,EAAM,KAAKO,WAAX,CAA3C;AAEA,CAhDD;AAiDA;AACA;AACA;AACA;AACA;;;AACAR,MAAM,CAACU,SAAP,CAAiBC,IAAjB,GAAwB,YACxB;AACC,OAAKV,EAAL,CAAQW,UAAR,CAAmB,KAAKN,OAAxB;AACA,SAAO,IAAP;AACA,CAJD;AAMA;AACA;AACA;AACA;;;AACAN,MAAM,CAACU,SAAP,CAAiBG,OAAjB,GAA2B,YAC3B;AACC,OAAKN,UAAL,GAAkB,IAAlB;AACA,OAAKC,WAAL,GAAmB,IAAnB;AACA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,MAAIR,EAAE,GAAG,KAAKA,EAAd;AACAA,EAAAA,EAAE,CAACa,aAAH,CAAiB,KAAKR,OAAtB;AACA,CARD;;AAWAS,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["\nvar compileProgram = require('./shader/compileProgram'),\n\textractAttributes = require('./shader/extractAttributes'),\n\textractUniforms = require('./shader/extractUniforms'),\n\tsetPrecision = require('./shader/setPrecision'),\n\tgenerateUniformAccessObject = require('./shader/generateUniformAccessObject');\n\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param precision {string} The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n * @param attributeLocations {object} A key value pair showing which location eact attribute should sit eg {position:0, uvs:1}\n */\nvar Shader = function(gl, vertexSrc, fragmentSrc, precision, attributeLocations)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\tif(precision)\n\t{\n\t\tvertexSrc = setPrecision(vertexSrc, precision);\n\t\tfragmentSrc = setPrecision(fragmentSrc, precision);\n\t}\n\n\t/**\n\t * The shader program\n\t *\n\t * @member {WebGLProgram}\n\t */\n\t// First compile the program..\n\tthis.program = compileProgram(gl, vertexSrc, fragmentSrc, attributeLocations);\n\n\t/**\n\t * The attributes of the shader as an object containing the following properties\n\t * {\n\t * \ttype,\n\t * \tsize,\n\t * \tlocation,\n\t * \tpointer\n\t * }\n\t * @member {Object}\n\t */\n\t// next extract the attributes\n\tthis.attributes = extractAttributes(gl, this.program);\n\n    this.uniformData = extractUniforms(gl, this.program);\n\n\t/**\n\t * The uniforms of the shader as an object containing the following properties\n\t * {\n\t * \tgl,\n\t * \tdata\n\t * }\n\t * @member {Object}\n\t */\n\tthis.uniforms = generateUniformAccessObject( gl, this.uniformData );\n\n};\n/**\n * Uses this shader\n * \n * @return {PIXI.glCore.GLShader} Returns itself.\n */\nShader.prototype.bind = function()\n{\n\tthis.gl.useProgram(this.program);\n\treturn this;\n};\n\n/**\n * Destroys this shader\n * TODO\n */\nShader.prototype.destroy = function()\n{\n\tthis.attributes = null;\n\tthis.uniformData = null;\n\tthis.uniforms = null;\n\n\tvar gl = this.gl;\n\tgl.deleteProgram(this.program);\n};\n\n\nmodule.exports = Shader;\n"]},"metadata":{},"sourceType":"script"}