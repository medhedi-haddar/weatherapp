{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = deprecation; // provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n// A map of warning messages already fired\n\nvar warnings = {}; // provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n\nfunction warn(msg) {\n  // Ignore duplicat\n  if (warnings[msg]) {\n    return;\n  }\n  /* eslint-disable no-console */\n\n\n  var stack = new Error().stack; // Handle IE < 10 and Safari < 6\n\n  if (typeof stack === 'undefined') {\n    console.warn('Deprecation Warning: ', msg);\n  } else {\n    // chop off the stack trace which includes pixi.js internal calls\n    stack = stack.split('\\n').splice(3).join('\\n');\n\n    if (console.groupCollapsed) {\n      console.groupCollapsed('%cDeprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', msg);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn('Deprecation Warning: ', msg);\n      console.warn(stack);\n    }\n  }\n  /* eslint-enable no-console */\n\n\n  warnings[msg] = true;\n}\n\nfunction deprecation(core) {\n  var mesh = core.mesh,\n      particles = core.particles,\n      extras = core.extras,\n      filters = core.filters,\n      prepare = core.prepare,\n      loaders = core.loaders,\n      interaction = core.interaction;\n  Object.defineProperties(core, {\n    /**\n     * @class\n     * @private\n     * @name SpriteBatch\n     * @memberof PIXI\n     * @see PIXI.ParticleContainer\n     * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n     * @deprecated since version 3.0.0\n     */\n    SpriteBatch: {\n      get: function get() {\n        throw new ReferenceError('SpriteBatch does not exist any more, ' + 'please use the new ParticleContainer instead.');\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name AssetLoader\n     * @memberof PIXI\n     * @see PIXI.loaders.Loader\n     * @throws {ReferenceError} The loader system was overhauled in PixiJS v3,\n     * please see the new PIXI.loaders.Loader class.\n     * @deprecated since version 3.0.0\n     */\n    AssetLoader: {\n      get: function get() {\n        throw new ReferenceError('The loader system was overhauled in PixiJS v3, ' + 'please see the new PIXI.loaders.Loader class.');\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Stage\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    Stage: {\n      get: function get() {\n        warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n        return core.Container;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name DisplayObjectContainer\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    DisplayObjectContainer: {\n      get: function get() {\n        warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n        return core.Container;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Strip\n     * @memberof PIXI\n     * @see PIXI.mesh.Mesh\n     * @deprecated since version 3.0.0\n     */\n    Strip: {\n      get: function get() {\n        warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n        return mesh.Mesh;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Rope\n     * @memberof PIXI\n     * @see PIXI.mesh.Rope\n     * @deprecated since version 3.0.0\n     */\n    Rope: {\n      get: function get() {\n        warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n        return mesh.Rope;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name ParticleContainer\n     * @memberof PIXI\n     * @see PIXI.particles.ParticleContainer\n     * @deprecated since version 4.0.0\n     */\n    ParticleContainer: {\n      get: function get() {\n        warn('The ParticleContainer class has been moved to particles.ParticleContainer, ' + 'please use particles.ParticleContainer from now on.');\n        return particles.ParticleContainer;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name MovieClip\n     * @memberof PIXI\n     * @see PIXI.extras.MovieClip\n     * @deprecated since version 3.0.0\n     */\n    MovieClip: {\n      get: function get() {\n        warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n        return extras.AnimatedSprite;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TilingSprite\n     * @memberof PIXI\n     * @see PIXI.extras.TilingSprite\n     * @deprecated since version 3.0.0\n     */\n    TilingSprite: {\n      get: function get() {\n        warn('The TilingSprite class has been moved to extras.TilingSprite, ' + 'please use extras.TilingSprite from now on.');\n        return extras.TilingSprite;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BitmapText\n     * @memberof PIXI\n     * @see PIXI.extras.BitmapText\n     * @deprecated since version 3.0.0\n     */\n    BitmapText: {\n      get: function get() {\n        warn('The BitmapText class has been moved to extras.BitmapText, ' + 'please use extras.BitmapText from now on.');\n        return extras.BitmapText;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name blendModes\n     * @memberof PIXI\n     * @see PIXI.BLEND_MODES\n     * @deprecated since version 3.0.0\n     */\n    blendModes: {\n      get: function get() {\n        warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n        return core.BLEND_MODES;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name scaleModes\n     * @memberof PIXI\n     * @see PIXI.SCALE_MODES\n     * @deprecated since version 3.0.0\n     */\n    scaleModes: {\n      get: function get() {\n        warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n        return core.SCALE_MODES;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BaseTextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.BaseTextureCache\n     * @deprecated since version 3.0.0\n     */\n    BaseTextureCache: {\n      get: function get() {\n        warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, ' + 'please use utils.BaseTextureCache from now on.');\n        return core.utils.BaseTextureCache;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.TextureCache\n     * @deprecated since version 3.0.0\n     */\n    TextureCache: {\n      get: function get() {\n        warn('The TextureCache class has been moved to utils.TextureCache, ' + 'please use utils.TextureCache from now on.');\n        return core.utils.TextureCache;\n      }\n    },\n\n    /**\n     * @namespace\n     * @private\n     * @name math\n     * @memberof PIXI\n     * @see PIXI\n     * @deprecated since version 3.0.6\n     */\n    math: {\n      get: function get() {\n        warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n        return core;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.AbstractFilter\n     * @see PIXI.Filter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n      get: function get() {\n        warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n        return core.Filter;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.TransformManual\n     * @see PIXI.TransformBase\n     * @deprecated since version 4.0.0\n     */\n    TransformManual: {\n      get: function get() {\n        warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n        return core.TransformBase;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.TARGET_FPMS\n     * @see PIXI.settings.TARGET_FPMS\n     * @deprecated since version 4.2.0\n     */\n    TARGET_FPMS: {\n      get: function get() {\n        warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n        return core.settings.TARGET_FPMS;\n      },\n      set: function set(value) {\n        warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n        core.settings.TARGET_FPMS = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.FILTER_RESOLUTION\n     * @see PIXI.settings.FILTER_RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    FILTER_RESOLUTION: {\n      get: function get() {\n        warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n        return core.settings.FILTER_RESOLUTION;\n      },\n      set: function set(value) {\n        warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n        core.settings.FILTER_RESOLUTION = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RESOLUTION\n     * @see PIXI.settings.RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    RESOLUTION: {\n      get: function get() {\n        warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n        return core.settings.RESOLUTION;\n      },\n      set: function set(value) {\n        warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n        core.settings.RESOLUTION = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.MIPMAP_TEXTURES\n     * @see PIXI.settings.MIPMAP_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    MIPMAP_TEXTURES: {\n      get: function get() {\n        warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n        return core.settings.MIPMAP_TEXTURES;\n      },\n      set: function set(value) {\n        warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n        core.settings.MIPMAP_TEXTURES = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_BATCH_SIZE\n     * @see PIXI.settings.SPRITE_BATCH_SIZE\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_BATCH_SIZE: {\n      get: function get() {\n        warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n        return core.settings.SPRITE_BATCH_SIZE;\n      },\n      set: function set(value) {\n        warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n        core.settings.SPRITE_BATCH_SIZE = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_MAX_TEXTURES\n     * @see PIXI.settings.SPRITE_MAX_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_MAX_TEXTURES: {\n      get: function get() {\n        warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n        return core.settings.SPRITE_MAX_TEXTURES;\n      },\n      set: function set(value) {\n        warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n        core.settings.SPRITE_MAX_TEXTURES = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RETINA_PREFIX\n     * @see PIXI.settings.RETINA_PREFIX\n     * @deprecated since version 4.2.0\n     */\n    RETINA_PREFIX: {\n      get: function get() {\n        warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n        return core.settings.RETINA_PREFIX;\n      },\n      set: function set(value) {\n        warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n        core.settings.RETINA_PREFIX = value;\n      }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.DEFAULT_RENDER_OPTIONS\n     * @see PIXI.settings.RENDER_OPTIONS\n     * @deprecated since version 4.2.0\n     */\n    DEFAULT_RENDER_OPTIONS: {\n      get: function get() {\n        warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n        return core.settings.RENDER_OPTIONS;\n      }\n    }\n  }); // Move the default properties to settings\n\n  var defaults = [{\n    parent: 'TRANSFORM_MODE',\n    target: 'TRANSFORM_MODE'\n  }, {\n    parent: 'GC_MODES',\n    target: 'GC_MODE'\n  }, {\n    parent: 'WRAP_MODES',\n    target: 'WRAP_MODE'\n  }, {\n    parent: 'SCALE_MODES',\n    target: 'SCALE_MODE'\n  }, {\n    parent: 'PRECISION',\n    target: 'PRECISION_FRAGMENT'\n  }];\n\n  var _loop = function _loop(i) {\n    var deprecation = defaults[i];\n    Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n      get: function get() {\n        warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, ' + ('please use PIXI.settings.' + deprecation.target));\n        return core.settings[deprecation.target];\n      },\n      set: function set(value) {\n        warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, ' + ('please use PIXI.settings.' + deprecation.target));\n        core.settings[deprecation.target] = value;\n      }\n    });\n  };\n\n  for (var i = 0; i < defaults.length; i++) {\n    _loop(i);\n  }\n\n  Object.defineProperties(core.settings, {\n    /**\n     * @static\n     * @name PRECISION\n     * @memberof PIXI.settings\n     * @see PIXI.PRECISION\n     * @deprecated since version 4.4.0\n     */\n    PRECISION: {\n      get: function get() {\n        warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n        return core.settings.PRECISION_FRAGMENT;\n      },\n      set: function set(value) {\n        warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n        core.settings.PRECISION_FRAGMENT = value;\n      }\n    }\n  });\n\n  if (extras.AnimatedSprite) {\n    Object.defineProperties(extras, {\n      /**\n       * @class\n       * @name MovieClip\n       * @memberof PIXI.extras\n       * @see PIXI.extras.AnimatedSprite\n       * @deprecated since version 4.2.0\n       */\n      MovieClip: {\n        get: function get() {\n          warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n          return extras.AnimatedSprite;\n        }\n      }\n    });\n  }\n\n  if (extras) {\n    Object.defineProperties(extras, {\n      /**\n       * @class\n       * @name TextureTransform\n       * @memberof PIXI.extras\n       * @see PIXI.TextureMatrix\n       * @deprecated since version 4.6.0\n       */\n      TextureTransform: {\n        get: function get() {\n          warn('The TextureTransform class has been renamed to TextureMatrix, ' + 'please use PIXI.TextureMatrix from now on.');\n          return core.TextureMatrix;\n        }\n      }\n    });\n  }\n\n  core.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution) {\n    warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n    return renderer.generateTexture(this, scaleMode, resolution);\n  };\n\n  core.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution) {\n    warn('graphics generate texture has moved to the renderer. ' + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n    return this.generateCanvasTexture(scaleMode, resolution);\n  };\n  /**\n   * @method\n   * @name PIXI.GroupD8.isSwapWidthHeight\n   * @see PIXI.GroupD8.isVertical\n   * @param {number} rotation - The number to check.\n   * @returns {boolean} Whether or not the direction is vertical\n   * @deprecated since version 4.6.0\n   */\n\n\n  core.GroupD8.isSwapWidthHeight = function isSwapWidthHeight(rotation) {\n    warn('GroupD8.isSwapWidthHeight was renamed to GroupD8.isVertical');\n    return core.GroupD8.isVertical(rotation);\n  };\n\n  core.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform) {\n    this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n    warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n  };\n\n  core.RenderTexture.prototype.getImage = function getImage(target) {\n    warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n    return this.legacyRenderer.extract.image(target);\n  };\n\n  core.RenderTexture.prototype.getBase64 = function getBase64(target) {\n    warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n    return this.legacyRenderer.extract.base64(target);\n  };\n\n  core.RenderTexture.prototype.getCanvas = function getCanvas(target) {\n    warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n    return this.legacyRenderer.extract.canvas(target);\n  };\n\n  core.RenderTexture.prototype.getPixels = function getPixels(target) {\n    warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n    return this.legacyRenderer.pixels(target);\n  };\n  /**\n   * @method\n   * @private\n   * @name PIXI.Sprite#setTexture\n   * @see PIXI.Sprite#texture\n   * @deprecated since version 3.0.0\n   * @param {PIXI.Texture} texture - The texture to set to.\n   */\n\n\n  core.Sprite.prototype.setTexture = function setTexture(texture) {\n    this.texture = texture;\n    warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n  };\n\n  if (extras.BitmapText) {\n    /**\n     * @method\n     * @name PIXI.extras.BitmapText#setText\n     * @see PIXI.extras.BitmapText#text\n     * @deprecated since version 3.0.0\n     * @param {string} text - The text to set to.\n     */\n    extras.BitmapText.prototype.setText = function setText(text) {\n      this.text = text;\n      warn('setText is now deprecated, please use the text property, e.g : myBitmapText.text = \\'my text\\';');\n    };\n  }\n  /**\n   * @method\n   * @name PIXI.Text#setText\n   * @see PIXI.Text#text\n   * @deprecated since version 3.0.0\n   * @param {string} text - The text to set to.\n   */\n\n\n  core.Text.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myText.text = \\'my text\\';');\n  };\n  /**\n   * Calculates the ascent, descent and fontSize of a given fontStyle\n   *\n   * @name PIXI.Text.calculateFontProperties\n   * @see PIXI.TextMetrics.measureFont\n   * @deprecated since version 4.5.0\n   * @param {string} font - String representing the style of the font\n   * @return {Object} Font properties object\n   */\n\n\n  core.Text.calculateFontProperties = function calculateFontProperties(font) {\n    warn('Text.calculateFontProperties is now deprecated, please use the TextMetrics.measureFont');\n    return core.TextMetrics.measureFont(font);\n  };\n\n  Object.defineProperties(core.Text, {\n    fontPropertiesCache: {\n      get: function get() {\n        warn('Text.fontPropertiesCache is deprecated');\n        return core.TextMetrics._fonts;\n      }\n    },\n    fontPropertiesCanvas: {\n      get: function get() {\n        warn('Text.fontPropertiesCanvas is deprecated');\n        return core.TextMetrics._canvas;\n      }\n    },\n    fontPropertiesContext: {\n      get: function get() {\n        warn('Text.fontPropertiesContext is deprecated');\n        return core.TextMetrics._context;\n      }\n    }\n  });\n  /**\n   * @method\n   * @name PIXI.Text#setStyle\n   * @see PIXI.Text#style\n   * @deprecated since version 3.0.0\n   * @param {*} style - The style to set to.\n   */\n\n  core.Text.prototype.setStyle = function setStyle(style) {\n    this.style = style;\n    warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n  };\n  /**\n   * @method\n   * @name PIXI.Text#determineFontProperties\n   * @see PIXI.Text#measureFontProperties\n   * @deprecated since version 4.2.0\n   * @private\n   * @param {string} fontStyle - String representing the style of the font\n   * @return {Object} Font properties object\n   */\n\n\n  core.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle) {\n    warn('determineFontProperties is now deprecated, please use TextMetrics.measureFont method');\n    return core.TextMetrics.measureFont(fontStyle);\n  };\n  /**\n   * @method\n   * @name PIXI.Text.getFontStyle\n   * @see PIXI.TextMetrics.getFontStyle\n   * @deprecated since version 4.5.0\n   * @param {PIXI.TextStyle} style - The style to use.\n   * @return {string} Font string\n   */\n\n\n  core.Text.getFontStyle = function getFontStyle(style) {\n    warn('getFontStyle is now deprecated, please use TextStyle.toFontString() instead');\n    style = style || {};\n\n    if (!(style instanceof core.TextStyle)) {\n      style = new core.TextStyle(style);\n    }\n\n    return style.toFontString();\n  };\n\n  Object.defineProperties(core.TextStyle.prototype, {\n    /**\n     * Set all properties of a font as a single string\n     *\n     * @name PIXI.TextStyle#font\n     * @deprecated since version 4.0.0\n     */\n    font: {\n      get: function get() {\n        warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\', \\'fontSize\\', \\'fontStyle\\', \\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n        var fontSizeString = typeof this._fontSize === 'number' ? this._fontSize + 'px' : this._fontSize;\n        return this._fontStyle + ' ' + this._fontVariant + ' ' + this._fontWeight + ' ' + fontSizeString + ' ' + this._fontFamily;\n      },\n      set: function set(font) {\n        warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\',\\'fontSize\\',fontStyle\\',\\'fontVariant\\' and \\'fontWeight\\' properties from now on'); // can work out fontStyle from search of whole string\n\n        if (font.indexOf('italic') > 1) {\n          this._fontStyle = 'italic';\n        } else if (font.indexOf('oblique') > -1) {\n          this._fontStyle = 'oblique';\n        } else {\n          this._fontStyle = 'normal';\n        } // can work out fontVariant from search of whole string\n\n\n        if (font.indexOf('small-caps') > -1) {\n          this._fontVariant = 'small-caps';\n        } else {\n          this._fontVariant = 'normal';\n        } // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n\n\n        var splits = font.split(' ');\n        var fontSizeIndex = -1;\n        this._fontSize = 26;\n\n        for (var i = 0; i < splits.length; ++i) {\n          if (splits[i].match(/(px|pt|em|%)/)) {\n            fontSizeIndex = i;\n            this._fontSize = splits[i];\n            break;\n          }\n        } // we can now search for fontWeight as we know it must occur before the fontSize\n\n\n        this._fontWeight = 'normal';\n\n        for (var _i = 0; _i < fontSizeIndex; ++_i) {\n          if (splits[_i].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/)) {\n            this._fontWeight = splits[_i];\n            break;\n          }\n        } // and finally join everything together after the fontSize in case the font family has multiple words\n\n\n        if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1) {\n          this._fontFamily = '';\n\n          for (var _i2 = fontSizeIndex + 1; _i2 < splits.length; ++_i2) {\n            this._fontFamily += splits[_i2] + ' ';\n          }\n\n          this._fontFamily = this._fontFamily.slice(0, -1);\n        } else {\n          this._fontFamily = 'Arial';\n        }\n\n        this.styleID++;\n      }\n    }\n  });\n  /**\n   * @method\n   * @name PIXI.Texture#setFrame\n   * @see PIXI.Texture#setFrame\n   * @deprecated since version 3.0.0\n   * @param {PIXI.Rectangle} frame - The frame to set.\n   */\n\n  core.Texture.prototype.setFrame = function setFrame(frame) {\n    this.frame = frame;\n    warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n  };\n  /**\n   * @static\n   * @function\n   * @name PIXI.Texture.addTextureToCache\n   * @see PIXI.Texture.addToCache\n   * @deprecated since 4.5.0\n   * @param {PIXI.Texture} texture - The Texture to add to the cache.\n   * @param {string} id - The id that the texture will be stored against.\n   */\n\n\n  core.Texture.addTextureToCache = function addTextureToCache(texture, id) {\n    core.Texture.addToCache(texture, id);\n    warn('Texture.addTextureToCache is deprecated, please use Texture.addToCache from now on.');\n  };\n  /**\n   * @static\n   * @function\n   * @name PIXI.Texture.removeTextureFromCache\n   * @see PIXI.Texture.removeFromCache\n   * @deprecated since 4.5.0\n   * @param {string} id - The id of the texture to be removed\n   * @return {PIXI.Texture|null} The texture that was removed\n   */\n\n\n  core.Texture.removeTextureFromCache = function removeTextureFromCache(id) {\n    warn('Texture.removeTextureFromCache is deprecated, please use Texture.removeFromCache from now on. ' + 'Be aware that Texture.removeFromCache does not automatically its BaseTexture from the BaseTextureCache. ' + 'For that, use BaseTexture.removeFromCache');\n    core.BaseTexture.removeFromCache(id);\n    return core.Texture.removeFromCache(id);\n  };\n\n  Object.defineProperties(filters, {\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.AbstractFilter\n     * @see PIXI.AbstractFilter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n      get: function get() {\n        warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n        return core.AbstractFilter;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.SpriteMaskFilter\n     * @see PIXI.SpriteMaskFilter\n     * @deprecated since version 3.0.6\n     */\n    SpriteMaskFilter: {\n      get: function get() {\n        warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n        return core.SpriteMaskFilter;\n      }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.VoidFilter\n     * @see PIXI.filters.AlphaFilter\n     * @deprecated since version 4.5.7\n     */\n    VoidFilter: {\n      get: function get() {\n        warn('VoidFilter has been renamed to AlphaFilter, please use PIXI.filters.AlphaFilter');\n        return filters.AlphaFilter;\n      }\n    }\n  });\n  /**\n   * @method\n   * @name PIXI.utils.uuid\n   * @see PIXI.utils.uid\n   * @deprecated since version 3.0.6\n   * @return {number} The uid\n   */\n\n  core.utils.uuid = function () {\n    warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n    return core.utils.uid();\n  };\n  /**\n   * @method\n   * @name PIXI.utils.canUseNewCanvasBlendModes\n   * @see PIXI.CanvasTinter\n   * @deprecated\n   * @return {boolean} Can use blend modes.\n   */\n\n\n  core.utils.canUseNewCanvasBlendModes = function () {\n    warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n    return core.CanvasTinter.canUseMultiply;\n  };\n\n  var saidHello = true;\n  /**\n   * @name PIXI.utils._saidHello\n   * @type {boolean}\n   * @see PIXI.utils.skipHello\n   * @deprecated since 4.1.0\n   */\n\n  Object.defineProperty(core.utils, '_saidHello', {\n    set: function set(bool) {\n      if (bool) {\n        warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n        this.skipHello();\n      }\n\n      saidHello = bool;\n    },\n    get: function get() {\n      return saidHello;\n    }\n  });\n\n  if (prepare.BasePrepare) {\n    /**\n     * @method\n     * @name PIXI.prepare.BasePrepare#register\n     * @see PIXI.prepare.BasePrepare#registerFindHook\n     * @deprecated since version 4.4.2\n     * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n     *        function must return `true` if it was able to add item to the queue.\n     * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n     *        function must return `true` if it was able to handle upload of item.\n     * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n     */\n    prepare.BasePrepare.prototype.register = function register(addHook, uploadHook) {\n      warn('renderer.plugins.prepare.register is now deprecated, ' + 'please use renderer.plugins.prepare.registerFindHook & renderer.plugins.prepare.registerUploadHook');\n\n      if (addHook) {\n        this.registerFindHook(addHook);\n      }\n\n      if (uploadHook) {\n        this.registerUploadHook(uploadHook);\n      }\n\n      return this;\n    };\n  }\n\n  if (prepare.canvas) {\n    /**\n     * The number of graphics or textures to upload to the GPU.\n     *\n     * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n     * @static\n     * @type {number}\n     * @see PIXI.prepare.BasePrepare.limiter\n     * @deprecated since 4.2.0\n     */\n    Object.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n      set: function set() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer'); // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n      },\n      get: function get() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n        return NaN;\n      }\n    });\n  }\n\n  if (prepare.webgl) {\n    /**\n     * The number of graphics or textures to upload to the GPU.\n     *\n     * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n     * @static\n     * @type {number}\n     * @see PIXI.prepare.BasePrepare.limiter\n     * @deprecated since 4.2.0\n     */\n    Object.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n      set: function set() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer'); // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n      },\n      get: function get() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n        return NaN;\n      }\n    });\n  }\n\n  if (loaders.Loader) {\n    var Resource = loaders.Resource;\n    var Loader = loaders.Loader;\n    Object.defineProperties(Resource.prototype, {\n      isJson: {\n        get: function get() {\n          warn('The isJson property is deprecated, please use `resource.type === Resource.TYPE.JSON`.');\n          return this.type === Resource.TYPE.JSON;\n        }\n      },\n      isXml: {\n        get: function get() {\n          warn('The isXml property is deprecated, please use `resource.type === Resource.TYPE.XML`.');\n          return this.type === Resource.TYPE.XML;\n        }\n      },\n      isImage: {\n        get: function get() {\n          warn('The isImage property is deprecated, please use `resource.type === Resource.TYPE.IMAGE`.');\n          return this.type === Resource.TYPE.IMAGE;\n        }\n      },\n      isAudio: {\n        get: function get() {\n          warn('The isAudio property is deprecated, please use `resource.type === Resource.TYPE.AUDIO`.');\n          return this.type === Resource.TYPE.AUDIO;\n        }\n      },\n      isVideo: {\n        get: function get() {\n          warn('The isVideo property is deprecated, please use `resource.type === Resource.TYPE.VIDEO`.');\n          return this.type === Resource.TYPE.VIDEO;\n        }\n      }\n    });\n    Object.defineProperties(Loader.prototype, {\n      before: {\n        get: function get() {\n          warn('The before() method is deprecated, please use pre().');\n          return this.pre;\n        }\n      },\n      after: {\n        get: function get() {\n          warn('The after() method is deprecated, please use use().');\n          return this.use;\n        }\n      }\n    });\n  }\n\n  if (interaction.interactiveTarget) {\n    /**\n     * @name PIXI.interaction.interactiveTarget#defaultCursor\n     * @static\n     * @type {number}\n     * @see PIXI.interaction.interactiveTarget#cursor\n     * @deprecated since 4.3.0\n     */\n    Object.defineProperty(interaction.interactiveTarget, 'defaultCursor', {\n      set: function set(value) {\n        warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n        this.cursor = value;\n      },\n      get: function get() {\n        warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n        return this.cursor;\n      }\n    });\n  }\n\n  if (interaction.InteractionManager) {\n    /**\n     * @name PIXI.interaction.InteractionManager#defaultCursorStyle\n     * @static\n     * @type {string}\n     * @see PIXI.interaction.InteractionManager#cursorStyles\n     * @deprecated since 4.3.0\n     */\n    Object.defineProperty(interaction.InteractionManager, 'defaultCursorStyle', {\n      set: function set(value) {\n        warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n        this.cursorStyles.default = value;\n      },\n      get: function get() {\n        warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n        return this.cursorStyles.default;\n      }\n    });\n    /**\n     * @name PIXI.interaction.InteractionManager#currentCursorStyle\n     * @static\n     * @type {string}\n     * @see PIXI.interaction.InteractionManager#cursorStyles\n     * @deprecated since 4.3.0\n     */\n\n    Object.defineProperty(interaction.InteractionManager, 'currentCursorStyle', {\n      set: function set(value) {\n        warn('Property currentCursorStyle has been removed.' + 'See the currentCursorMode property, which works differently.');\n        this.currentCursorMode = value;\n      },\n      get: function get() {\n        warn('Property currentCursorStyle has been removed.' + 'See the currentCursorMode property, which works differently.');\n        return this.currentCursorMode;\n      }\n    });\n  }\n}","map":{"version":3,"sources":["../src/deprecation.js"],"names":["warnings","stack","console","deprecation","mesh","particles","extras","filters","prepare","loaders","interaction","core","Object","SpriteBatch","get","AssetLoader","Stage","warn","DisplayObjectContainer","Strip","Rope","ParticleContainer","MovieClip","TilingSprite","BitmapText","blendModes","scaleModes","BaseTextureCache","TextureCache","math","AbstractFilter","TransformManual","TARGET_FPMS","set","FILTER_RESOLUTION","RESOLUTION","MIPMAP_TEXTURES","SPRITE_BATCH_SIZE","SPRITE_MAX_TEXTURES","RETINA_PREFIX","DEFAULT_RENDER_OPTIONS","defaults","parent","target","i","PRECISION","TextureTransform","renderer","fontPropertiesCache","fontPropertiesCanvas","fontPropertiesContext","style","font","fontSizeString","splits","fontSizeIndex","SpriteMaskFilter","VoidFilter","saidHello","Resource","Loader","isJson","isXml","isImage","isAudio","isVideo","before","after"],"mappings":"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","sourcesContent":["// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n\n// A map of warning messages already fired\nconst warnings = {};\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg)\n{\n    // Ignore duplicat\n    if (warnings[msg])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('Deprecation Warning: ', msg);\n    }\n    else\n    {\n        // chop off the stack trace which includes pixi.js internal calls\n        stack = stack.split('\\n').splice(3).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cDeprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                msg\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('Deprecation Warning: ', msg);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[msg] = true;\n}\n\nexport default function deprecation(core)\n{\n    const { mesh, particles, extras, filters, prepare, loaders, interaction } = core;\n\n    Object.defineProperties(core, {\n\n        /**\n         * @class\n         * @private\n         * @name SpriteBatch\n         * @memberof PIXI\n         * @see PIXI.ParticleContainer\n         * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n         * @deprecated since version 3.0.0\n         */\n        SpriteBatch: {\n            get()\n            {\n                throw new ReferenceError('SpriteBatch does not exist any more, '\n                    + 'please use the new ParticleContainer instead.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name AssetLoader\n         * @memberof PIXI\n         * @see PIXI.loaders.Loader\n         * @throws {ReferenceError} The loader system was overhauled in PixiJS v3,\n         * please see the new PIXI.loaders.Loader class.\n         * @deprecated since version 3.0.0\n         */\n        AssetLoader: {\n            get()\n            {\n                throw new ReferenceError('The loader system was overhauled in PixiJS v3, '\n                    + 'please see the new PIXI.loaders.Loader class.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Stage\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        Stage: {\n            get()\n            {\n                warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name DisplayObjectContainer\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        DisplayObjectContainer: {\n            get()\n            {\n                warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Strip\n         * @memberof PIXI\n         * @see PIXI.mesh.Mesh\n         * @deprecated since version 3.0.0\n         */\n        Strip: {\n            get()\n            {\n                warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n\n                return mesh.Mesh;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Rope\n         * @memberof PIXI\n         * @see PIXI.mesh.Rope\n         * @deprecated since version 3.0.0\n         */\n        Rope: {\n            get()\n            {\n                warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n\n                return mesh.Rope;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name ParticleContainer\n         * @memberof PIXI\n         * @see PIXI.particles.ParticleContainer\n         * @deprecated since version 4.0.0\n         */\n        ParticleContainer: {\n            get()\n            {\n                warn('The ParticleContainer class has been moved to particles.ParticleContainer, '\n                    + 'please use particles.ParticleContainer from now on.');\n\n                return particles.ParticleContainer;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name MovieClip\n         * @memberof PIXI\n         * @see PIXI.extras.MovieClip\n         * @deprecated since version 3.0.0\n         */\n        MovieClip: {\n            get()\n            {\n                warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n\n                return extras.AnimatedSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TilingSprite\n         * @memberof PIXI\n         * @see PIXI.extras.TilingSprite\n         * @deprecated since version 3.0.0\n         */\n        TilingSprite: {\n            get()\n            {\n                warn('The TilingSprite class has been moved to extras.TilingSprite, '\n                    + 'please use extras.TilingSprite from now on.');\n\n                return extras.TilingSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BitmapText\n         * @memberof PIXI\n         * @see PIXI.extras.BitmapText\n         * @deprecated since version 3.0.0\n         */\n        BitmapText: {\n            get()\n            {\n                warn('The BitmapText class has been moved to extras.BitmapText, '\n                    + 'please use extras.BitmapText from now on.');\n\n                return extras.BitmapText;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name blendModes\n         * @memberof PIXI\n         * @see PIXI.BLEND_MODES\n         * @deprecated since version 3.0.0\n         */\n        blendModes: {\n            get()\n            {\n                warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n\n                return core.BLEND_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name scaleModes\n         * @memberof PIXI\n         * @see PIXI.SCALE_MODES\n         * @deprecated since version 3.0.0\n         */\n        scaleModes: {\n            get()\n            {\n                warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n\n                return core.SCALE_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BaseTextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.BaseTextureCache\n         * @deprecated since version 3.0.0\n         */\n        BaseTextureCache: {\n            get()\n            {\n                warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, '\n                    + 'please use utils.BaseTextureCache from now on.');\n\n                return core.utils.BaseTextureCache;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.TextureCache\n         * @deprecated since version 3.0.0\n         */\n        TextureCache: {\n            get()\n            {\n                warn('The TextureCache class has been moved to utils.TextureCache, '\n                    + 'please use utils.TextureCache from now on.');\n\n                return core.utils.TextureCache;\n            },\n        },\n\n        /**\n         * @namespace\n         * @private\n         * @name math\n         * @memberof PIXI\n         * @see PIXI\n         * @deprecated since version 3.0.6\n         */\n        math: {\n            get()\n            {\n                warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n\n                return core;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.AbstractFilter\n         * @see PIXI.Filter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.Filter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.TransformManual\n         * @see PIXI.TransformBase\n         * @deprecated since version 4.0.0\n         */\n        TransformManual: {\n            get()\n            {\n                warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n\n                return core.TransformBase;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.TARGET_FPMS\n         * @see PIXI.settings.TARGET_FPMS\n         * @deprecated since version 4.2.0\n         */\n        TARGET_FPMS: {\n            get()\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                return core.settings.TARGET_FPMS;\n            },\n            set(value)\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                core.settings.TARGET_FPMS = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.FILTER_RESOLUTION\n         * @see PIXI.settings.FILTER_RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        FILTER_RESOLUTION: {\n            get()\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                return core.settings.FILTER_RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                core.settings.FILTER_RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RESOLUTION\n         * @see PIXI.settings.RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        RESOLUTION: {\n            get()\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                return core.settings.RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                core.settings.RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.MIPMAP_TEXTURES\n         * @see PIXI.settings.MIPMAP_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        MIPMAP_TEXTURES: {\n            get()\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                return core.settings.MIPMAP_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                core.settings.MIPMAP_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_BATCH_SIZE\n         * @see PIXI.settings.SPRITE_BATCH_SIZE\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_BATCH_SIZE: {\n            get()\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                return core.settings.SPRITE_BATCH_SIZE;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                core.settings.SPRITE_BATCH_SIZE = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_MAX_TEXTURES\n         * @see PIXI.settings.SPRITE_MAX_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_MAX_TEXTURES: {\n            get()\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                return core.settings.SPRITE_MAX_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                core.settings.SPRITE_MAX_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RETINA_PREFIX\n         * @see PIXI.settings.RETINA_PREFIX\n         * @deprecated since version 4.2.0\n         */\n        RETINA_PREFIX: {\n            get()\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                return core.settings.RETINA_PREFIX;\n            },\n            set(value)\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                core.settings.RETINA_PREFIX = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.DEFAULT_RENDER_OPTIONS\n         * @see PIXI.settings.RENDER_OPTIONS\n         * @deprecated since version 4.2.0\n         */\n        DEFAULT_RENDER_OPTIONS: {\n            get()\n            {\n                warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n\n                return core.settings.RENDER_OPTIONS;\n            },\n        },\n    });\n\n    // Move the default properties to settings\n    const defaults = [\n        { parent: 'TRANSFORM_MODE', target: 'TRANSFORM_MODE' },\n        { parent: 'GC_MODES', target: 'GC_MODE' },\n        { parent: 'WRAP_MODES', target: 'WRAP_MODE' },\n        { parent: 'SCALE_MODES', target: 'SCALE_MODE' },\n        { parent: 'PRECISION', target: 'PRECISION_FRAGMENT' },\n    ];\n\n    for (let i = 0; i < defaults.length; i++)\n    {\n        const deprecation = defaults[i];\n\n        Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n            get()\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                return core.settings[deprecation.target];\n            },\n            set(value)\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                core.settings[deprecation.target] = value;\n            },\n        });\n    }\n\n    Object.defineProperties(core.settings, {\n\n        /**\n         * @static\n         * @name PRECISION\n         * @memberof PIXI.settings\n         * @see PIXI.PRECISION\n         * @deprecated since version 4.4.0\n         */\n        PRECISION: {\n            get()\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                return core.settings.PRECISION_FRAGMENT;\n            },\n            set(value)\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                core.settings.PRECISION_FRAGMENT = value;\n            },\n        },\n    });\n\n    if (extras.AnimatedSprite)\n    {\n        Object.defineProperties(extras, {\n\n            /**\n             * @class\n             * @name MovieClip\n             * @memberof PIXI.extras\n             * @see PIXI.extras.AnimatedSprite\n             * @deprecated since version 4.2.0\n             */\n            MovieClip: {\n                get()\n                {\n                    warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n\n                    return extras.AnimatedSprite;\n                },\n            },\n        });\n    }\n\n    if (extras)\n    {\n        Object.defineProperties(extras, {\n            /**\n             * @class\n             * @name TextureTransform\n             * @memberof PIXI.extras\n             * @see PIXI.TextureMatrix\n             * @deprecated since version 4.6.0\n             */\n            TextureTransform: {\n                get()\n                {\n                    warn('The TextureTransform class has been renamed to TextureMatrix, '\n                        + 'please use PIXI.TextureMatrix from now on.');\n\n                    return core.TextureMatrix;\n                },\n            },\n        });\n    }\n\n    core.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution)\n    {\n        warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n\n        return renderer.generateTexture(this, scaleMode, resolution);\n    };\n\n    core.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution)\n    {\n        warn('graphics generate texture has moved to the renderer. '\n            + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n\n        return this.generateCanvasTexture(scaleMode, resolution);\n    };\n\n    /**\n     * @method\n     * @name PIXI.GroupD8.isSwapWidthHeight\n     * @see PIXI.GroupD8.isVertical\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     * @deprecated since version 4.6.0\n     */\n    core.GroupD8.isSwapWidthHeight = function isSwapWidthHeight(rotation)\n    {\n        warn('GroupD8.isSwapWidthHeight was renamed to GroupD8.isVertical');\n\n        return core.GroupD8.isVertical(rotation);\n    };\n\n    core.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform)\n    {\n        this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n        warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n    };\n\n    core.RenderTexture.prototype.getImage = function getImage(target)\n    {\n        warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n\n        return this.legacyRenderer.extract.image(target);\n    };\n\n    core.RenderTexture.prototype.getBase64 = function getBase64(target)\n    {\n        warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n\n        return this.legacyRenderer.extract.base64(target);\n    };\n\n    core.RenderTexture.prototype.getCanvas = function getCanvas(target)\n    {\n        warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n\n        return this.legacyRenderer.extract.canvas(target);\n    };\n\n    core.RenderTexture.prototype.getPixels = function getPixels(target)\n    {\n        warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n\n        return this.legacyRenderer.pixels(target);\n    };\n\n    /**\n     * @method\n     * @private\n     * @name PIXI.Sprite#setTexture\n     * @see PIXI.Sprite#texture\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Texture} texture - The texture to set to.\n     */\n    core.Sprite.prototype.setTexture = function setTexture(texture)\n    {\n        this.texture = texture;\n        warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n    };\n\n    if (extras.BitmapText)\n    {\n        /**\n         * @method\n         * @name PIXI.extras.BitmapText#setText\n         * @see PIXI.extras.BitmapText#text\n         * @deprecated since version 3.0.0\n         * @param {string} text - The text to set to.\n         */\n        extras.BitmapText.prototype.setText = function setText(text)\n        {\n            this.text = text;\n            warn(`setText is now deprecated, please use the text property, e.g : myBitmapText.text = 'my text';`);\n        };\n    }\n\n    /**\n     * @method\n     * @name PIXI.Text#setText\n     * @see PIXI.Text#text\n     * @deprecated since version 3.0.0\n     * @param {string} text - The text to set to.\n     */\n    core.Text.prototype.setText = function setText(text)\n    {\n        this.text = text;\n        warn(`setText is now deprecated, please use the text property, e.g : myText.text = 'my text';`);\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @name PIXI.Text.calculateFontProperties\n     * @see PIXI.TextMetrics.measureFont\n     * @deprecated since version 4.5.0\n     * @param {string} font - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.calculateFontProperties = function calculateFontProperties(font)\n    {\n        warn(`Text.calculateFontProperties is now deprecated, please use the TextMetrics.measureFont`);\n\n        return core.TextMetrics.measureFont(font);\n    };\n\n    Object.defineProperties(core.Text, {\n        fontPropertiesCache: {\n            get()\n            {\n                warn(`Text.fontPropertiesCache is deprecated`);\n\n                return core.TextMetrics._fonts;\n            },\n        },\n        fontPropertiesCanvas: {\n            get()\n            {\n                warn(`Text.fontPropertiesCanvas is deprecated`);\n\n                return core.TextMetrics._canvas;\n            },\n        },\n        fontPropertiesContext: {\n            get()\n            {\n                warn(`Text.fontPropertiesContext is deprecated`);\n\n                return core.TextMetrics._context;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Text#setStyle\n     * @see PIXI.Text#style\n     * @deprecated since version 3.0.0\n     * @param {*} style - The style to set to.\n     */\n    core.Text.prototype.setStyle = function setStyle(style)\n    {\n        this.style = style;\n        warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text#determineFontProperties\n     * @see PIXI.Text#measureFontProperties\n     * @deprecated since version 4.2.0\n     * @private\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle)\n    {\n        warn('determineFontProperties is now deprecated, please use TextMetrics.measureFont method');\n\n        return core.TextMetrics.measureFont(fontStyle);\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text.getFontStyle\n     * @see PIXI.TextMetrics.getFontStyle\n     * @deprecated since version 4.5.0\n     * @param {PIXI.TextStyle} style - The style to use.\n     * @return {string} Font string\n     */\n    core.Text.getFontStyle = function getFontStyle(style)\n    {\n        warn('getFontStyle is now deprecated, please use TextStyle.toFontString() instead');\n\n        style = style || {};\n\n        if (!(style instanceof core.TextStyle))\n        {\n            style = new core.TextStyle(style);\n        }\n\n        return style.toFontString();\n    };\n\n    Object.defineProperties(core.TextStyle.prototype, {\n        /**\n         * Set all properties of a font as a single string\n         *\n         * @name PIXI.TextStyle#font\n         * @deprecated since version 4.0.0\n         */\n        font: {\n            get()\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily', 'fontSize', 'fontStyle', 'fontVariant' and 'fontWeight' properties from now on`);\n\n                const fontSizeString = (typeof this._fontSize === 'number') ? `${this._fontSize}px` : this._fontSize;\n\n                return `${this._fontStyle} ${this._fontVariant} ${this._fontWeight} ${fontSizeString} ${this._fontFamily}`;\n            },\n            set(font)\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily','fontSize',fontStyle','fontVariant' and 'fontWeight' properties from now on`);\n\n                // can work out fontStyle from search of whole string\n                if (font.indexOf('italic') > 1)\n                {\n                    this._fontStyle = 'italic';\n                }\n                else if (font.indexOf('oblique') > -1)\n                {\n                    this._fontStyle = 'oblique';\n                }\n                else\n                {\n                    this._fontStyle = 'normal';\n                }\n\n                // can work out fontVariant from search of whole string\n                if (font.indexOf('small-caps') > -1)\n                {\n                    this._fontVariant = 'small-caps';\n                }\n                else\n                {\n                    this._fontVariant = 'normal';\n                }\n\n                // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n                const splits = font.split(' ');\n                let fontSizeIndex = -1;\n\n                this._fontSize = 26;\n                for (let i = 0; i < splits.length; ++i)\n                {\n                    if (splits[i].match(/(px|pt|em|%)/))\n                    {\n                        fontSizeIndex = i;\n                        this._fontSize = splits[i];\n                        break;\n                    }\n                }\n\n                // we can now search for fontWeight as we know it must occur before the fontSize\n                this._fontWeight = 'normal';\n                for (let i = 0; i < fontSizeIndex; ++i)\n                {\n                    if (splits[i].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/))\n                    {\n                        this._fontWeight = splits[i];\n                        break;\n                    }\n                }\n\n                // and finally join everything together after the fontSize in case the font family has multiple words\n                if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1)\n                {\n                    this._fontFamily = '';\n                    for (let i = fontSizeIndex + 1; i < splits.length; ++i)\n                    {\n                        this._fontFamily += `${splits[i]} `;\n                    }\n\n                    this._fontFamily = this._fontFamily.slice(0, -1);\n                }\n                else\n                {\n                    this._fontFamily = 'Arial';\n                }\n\n                this.styleID++;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Texture#setFrame\n     * @see PIXI.Texture#setFrame\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Rectangle} frame - The frame to set.\n     */\n    core.Texture.prototype.setFrame = function setFrame(frame)\n    {\n        this.frame = frame;\n        warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.addTextureToCache\n     * @see PIXI.Texture.addToCache\n     * @deprecated since 4.5.0\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n    core.Texture.addTextureToCache = function addTextureToCache(texture, id)\n    {\n        core.Texture.addToCache(texture, id);\n        warn('Texture.addTextureToCache is deprecated, please use Texture.addToCache from now on.');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.removeTextureFromCache\n     * @see PIXI.Texture.removeFromCache\n     * @deprecated since 4.5.0\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture|null} The texture that was removed\n     */\n    core.Texture.removeTextureFromCache = function removeTextureFromCache(id)\n    {\n        warn('Texture.removeTextureFromCache is deprecated, please use Texture.removeFromCache from now on. '\n         + 'Be aware that Texture.removeFromCache does not automatically its BaseTexture from the BaseTextureCache. '\n         + 'For that, use BaseTexture.removeFromCache');\n\n        core.BaseTexture.removeFromCache(id);\n\n        return core.Texture.removeFromCache(id);\n    };\n\n    Object.defineProperties(filters, {\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.AbstractFilter\n         * @see PIXI.AbstractFilter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.AbstractFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.SpriteMaskFilter\n         * @see PIXI.SpriteMaskFilter\n         * @deprecated since version 3.0.6\n         */\n        SpriteMaskFilter: {\n            get()\n            {\n                warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n\n                return core.SpriteMaskFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.VoidFilter\n         * @see PIXI.filters.AlphaFilter\n         * @deprecated since version 4.5.7\n         */\n        VoidFilter: {\n            get()\n            {\n                warn('VoidFilter has been renamed to AlphaFilter, please use PIXI.filters.AlphaFilter');\n\n                return filters.AlphaFilter;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.utils.uuid\n     * @see PIXI.utils.uid\n     * @deprecated since version 3.0.6\n     * @return {number} The uid\n     */\n    core.utils.uuid = () =>\n    {\n        warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n\n        return core.utils.uid();\n    };\n\n    /**\n     * @method\n     * @name PIXI.utils.canUseNewCanvasBlendModes\n     * @see PIXI.CanvasTinter\n     * @deprecated\n     * @return {boolean} Can use blend modes.\n     */\n    core.utils.canUseNewCanvasBlendModes = () =>\n    {\n        warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n\n        return core.CanvasTinter.canUseMultiply;\n    };\n\n    let saidHello = true;\n\n    /**\n     * @name PIXI.utils._saidHello\n     * @type {boolean}\n     * @see PIXI.utils.skipHello\n     * @deprecated since 4.1.0\n     */\n    Object.defineProperty(core.utils, '_saidHello', {\n        set(bool)\n        {\n            if (bool)\n            {\n                warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n                this.skipHello();\n            }\n            saidHello = bool;\n        },\n        get()\n        {\n            return saidHello;\n        },\n    });\n\n    if (prepare.BasePrepare)\n    {\n        /**\n         * @method\n         * @name PIXI.prepare.BasePrepare#register\n         * @see PIXI.prepare.BasePrepare#registerFindHook\n         * @deprecated since version 4.4.2\n         * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n         *        function must return `true` if it was able to add item to the queue.\n         * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n         *        function must return `true` if it was able to handle upload of item.\n         * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n         */\n        prepare.BasePrepare.prototype.register = function register(addHook, uploadHook)\n        {\n            warn('renderer.plugins.prepare.register is now deprecated, '\n                + 'please use renderer.plugins.prepare.registerFindHook & renderer.plugins.prepare.registerUploadHook');\n\n            if (addHook)\n            {\n                this.registerFindHook(addHook);\n            }\n\n            if (uploadHook)\n            {\n                this.registerUploadHook(uploadHook);\n            }\n\n            return this;\n        };\n    }\n\n    if (prepare.canvas)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (prepare.webgl)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (loaders.Loader)\n    {\n        const Resource = loaders.Resource;\n        const Loader = loaders.Loader;\n\n        Object.defineProperties(Resource.prototype, {\n            isJson: {\n                get()\n                {\n                    warn('The isJson property is deprecated, please use `resource.type === Resource.TYPE.JSON`.');\n\n                    return this.type === Resource.TYPE.JSON;\n                },\n            },\n            isXml: {\n                get()\n                {\n                    warn('The isXml property is deprecated, please use `resource.type === Resource.TYPE.XML`.');\n\n                    return this.type === Resource.TYPE.XML;\n                },\n            },\n            isImage: {\n                get()\n                {\n                    warn('The isImage property is deprecated, please use `resource.type === Resource.TYPE.IMAGE`.');\n\n                    return this.type === Resource.TYPE.IMAGE;\n                },\n            },\n            isAudio: {\n                get()\n                {\n                    warn('The isAudio property is deprecated, please use `resource.type === Resource.TYPE.AUDIO`.');\n\n                    return this.type === Resource.TYPE.AUDIO;\n                },\n            },\n            isVideo: {\n                get()\n                {\n                    warn('The isVideo property is deprecated, please use `resource.type === Resource.TYPE.VIDEO`.');\n\n                    return this.type === Resource.TYPE.VIDEO;\n                },\n            },\n        });\n\n        Object.defineProperties(Loader.prototype, {\n            before: {\n                get()\n                {\n                    warn('The before() method is deprecated, please use pre().');\n\n                    return this.pre;\n                },\n            },\n            after: {\n                get()\n                {\n                    warn('The after() method is deprecated, please use use().');\n\n                    return this.use;\n                },\n            },\n        });\n    }\n\n    if (interaction.interactiveTarget)\n    {\n        /**\n         * @name PIXI.interaction.interactiveTarget#defaultCursor\n         * @static\n         * @type {number}\n         * @see PIXI.interaction.interactiveTarget#cursor\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.interactiveTarget, 'defaultCursor', {\n            set(value)\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n                this.cursor = value;\n            },\n            get()\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n\n                return this.cursor;\n            },\n        });\n    }\n\n    if (interaction.InteractionManager)\n    {\n        /**\n         * @name PIXI.interaction.InteractionManager#defaultCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'defaultCursorStyle', {\n            set(value)\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n                this.cursorStyles.default = value;\n            },\n            get()\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n\n                return this.cursorStyles.default;\n            },\n        });\n\n        /**\n         * @name PIXI.interaction.InteractionManager#currentCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'currentCursorStyle', {\n            set(value)\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n                this.currentCursorMode = value;\n            },\n            get()\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n\n                return this.currentCursorMode;\n            },\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"script"}