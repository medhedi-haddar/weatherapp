{"ast":null,"code":"import moment from 'moment';\nimport 'moment/locale/fr';\nimport { useState } from 'react';\nmoment.locale('fr');\n\nconst getDetailCurrentForecast = detailCurrentForecast => {\n  const sunrise = moment(detailCurrentForecast.sunrise * 1000).format('HH:SS'); // 00:00\n\n  const sunset = moment(detailCurrentForecast.sunset * 1000).format('HH:SS'); // 00:00\n\n  const moonrise = moment(detailCurrentForecast.moonrise * 1000).format('HH:SS'); // 00:00\n\n  const moonset = moment(detailCurrentForecast.moonset * 1000).format('HH:SS'); // 00:00\n\n  const moon_phase = detailCurrentForecast.moon_phase; // 0 <-> 1\n\n  const pressure = Math.round(detailCurrentForecast.pressure); // hPa\n\n  const humidity = detailCurrentForecast.humidity; // %\n\n  const wind_speed = Math.round(detailCurrentForecast.wind_speed * 60); //km/h\n\n  const wind_gust = Math.round(detailCurrentForecast.wind_gust * 60); // km/h\n\n  const wind_deg = detailCurrentForecast.wind_deg; // degree°\n\n  const clouds = detailCurrentForecast.clouds; // %\n\n  const temp_night = Math.round(detailCurrentForecast.temp.night); // degree°\n\n  const temp_eve = Math.round(detailCurrentForecast.temp.eve); // degree°\n\n  const temp_morn = Math.round(detailCurrentForecast.temp.morn); // degree°\n  // Ressenti\n\n  const feels_like_day = Math.round(detailCurrentForecast.feels_like.day); // degree°\n\n  const feels_like_night = Math.round(detailCurrentForecast.feels_like.night); // degree°\n\n  const feels_like_eve = Math.round(detailCurrentForecast.feels_like.eve); // degree°\n\n  const feels_like_morn = Math.round(detailCurrentForecast.feels_like.morn); // degree°\n\n  const uvi = detailCurrentForecast.uvi; // degree°\n\n  if (detailCurrentForecast.rain) {\n    setRain(detailCurrentForecast.rain);\n  }\n\n  const snow = 0;\n\n  if (detailCurrentForecast.snow) {\n    snow = detailCurrentForecast.snow;\n  }\n\n  return {\n    sunrise: sunrise,\n    sunset: sunset,\n    moonrise: moonrise,\n    moonset: moonset,\n    moon_phase: moon_phase,\n    pressure: pressure,\n    humidity: humidity,\n    wind_speed: wind_speed,\n    wind_deg: wind_deg,\n    wind_gust: wind_gust,\n    clouds: clouds,\n    temp_night: temp_night,\n    temp_eve: temp_eve,\n    temp_morn: temp_morn,\n    feels_like_day: feels_like_day,\n    feels_like_night: feels_like_night,\n    feels_like_eve: feels_like_eve,\n    feels_like_morn: feels_like_morn,\n    uvi: uvi,\n    rain: Rain,\n    snow: snow\n  };\n};\n\nexport default getDetailCurrentForecast;","map":{"version":3,"sources":["/Users/mohamedelhedihaddar/weather-app/src/helpers/getDetailCurrentForecast.js"],"names":["moment","useState","locale","getDetailCurrentForecast","detailCurrentForecast","sunrise","format","sunset","moonrise","moonset","moon_phase","pressure","Math","round","humidity","wind_speed","wind_gust","wind_deg","clouds","temp_night","temp","night","temp_eve","eve","temp_morn","morn","feels_like_day","feels_like","day","feels_like_night","feels_like_eve","feels_like_morn","uvi","rain","setRain","snow","Rain"],"mappings":"AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACAD,MAAM,CAACE,MAAP,CAAc,IAAd;;AAEA,MAAMC,wBAAwB,GAAGC,qBAAqB,IAAI;AAItD,QAAMC,OAAO,GAAaL,MAAM,CAACI,qBAAqB,CAACC,OAAtB,GAA8B,IAA/B,CAAN,CAA2CC,MAA3C,CAAkD,OAAlD,CAA1B,CAJsD,CAIgC;;AACtF,QAAMC,MAAM,GAAcP,MAAM,CAACI,qBAAqB,CAACG,MAAtB,GAA6B,IAA9B,CAAN,CAA0CD,MAA1C,CAAiD,OAAjD,CAA1B,CALsD,CAK+B;;AACrF,QAAME,QAAQ,GAAYR,MAAM,CAACI,qBAAqB,CAACI,QAAtB,GAA+B,IAAhC,CAAN,CAA4CF,MAA5C,CAAmD,OAAnD,CAA1B,CANsD,CAMiC;;AACvF,QAAMG,OAAO,GAAaT,MAAM,CAACI,qBAAqB,CAACK,OAAtB,GAA8B,IAA/B,CAAN,CAA2CH,MAA3C,CAAkD,OAAlD,CAA1B,CAPsD,CAOgC;;AACtF,QAAMI,UAAU,GAAUN,qBAAqB,CAACM,UAAhD,CARsD,CAQM;;AAE5D,QAAMC,QAAQ,GAAYC,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACO,QAAjC,CAA1B,CAVsD,CAUgB;;AACtE,QAAMG,QAAQ,GAAYV,qBAAqB,CAACU,QAAhD,CAXsD,CAWI;;AAE1D,QAAMC,UAAU,GAAUH,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACW,UAAtB,GAAmC,EAA9C,CAA1B,CAbsD,CAauB;;AAC7E,QAAMC,SAAS,GAAWJ,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACY,SAAtB,GAAkC,EAA7C,CAA1B,CAdsD,CAcsB;;AAC5E,QAAMC,QAAQ,GAAYb,qBAAqB,CAACa,QAAhD,CAfsD,CAeI;;AAC1D,QAAMC,MAAM,GAAcd,qBAAqB,CAACc,MAAhD,CAhBsD,CAgBE;;AAExD,QAAMC,UAAU,GAAUP,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACgB,IAAtB,CAA2BC,KAAtC,CAA1B,CAlBsD,CAkBkB;;AACxE,QAAMC,QAAQ,GAAYV,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACgB,IAAtB,CAA2BG,GAAtC,CAA1B,CAnBsD,CAmBgB;;AACtE,QAAMC,SAAS,GAAWZ,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACgB,IAAtB,CAA2BK,IAAtC,CAA1B,CApBsD,CAoBiB;AACvE;;AACA,QAAMC,cAAc,GAAMd,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACuB,UAAtB,CAAiCC,GAA5C,CAA1B,CAtBsD,CAsBsB;;AAC5E,QAAMC,gBAAgB,GAAIjB,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACuB,UAAtB,CAAiCN,KAA5C,CAA1B,CAvBsD,CAuBwB;;AAC9E,QAAMS,cAAc,GAAMlB,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACuB,UAAtB,CAAiCJ,GAA5C,CAA1B,CAxBsD,CAwBsB;;AAC5E,QAAMQ,eAAe,GAAKnB,IAAI,CAACC,KAAL,CAAWT,qBAAqB,CAACuB,UAAtB,CAAiCF,IAA5C,CAA1B,CAzBsD,CAyBuB;;AAC7E,QAAMO,GAAG,GAAiB5B,qBAAqB,CAAC4B,GAAhD,CA1BsD,CA0BD;;AAErD,MAAG5B,qBAAqB,CAAC6B,IAAzB,EAA8B;AAC1BC,IAAAA,OAAO,CAAC9B,qBAAqB,CAAC6B,IAAvB,CAAP;AACH;;AAED,QAAME,IAAI,GAAG,CAAb;;AACA,MAAG/B,qBAAqB,CAAC+B,IAAzB,EAA8B;AAC1BA,IAAAA,IAAI,GAAG/B,qBAAqB,CAAC+B,IAA7B;AACH;;AAED,SAAM;AACF9B,IAAAA,OAAO,EAAaA,OADlB;AAEFE,IAAAA,MAAM,EAAcA,MAFlB;AAGFC,IAAAA,QAAQ,EAAYA,QAHlB;AAIFC,IAAAA,OAAO,EAAaA,OAJlB;AAKFC,IAAAA,UAAU,EAAUA,UALlB;AAMFC,IAAAA,QAAQ,EAAYA,QANlB;AAOFG,IAAAA,QAAQ,EAAYA,QAPlB;AAQFC,IAAAA,UAAU,EAAUA,UARlB;AASFE,IAAAA,QAAQ,EAAYA,QATlB;AAUFD,IAAAA,SAAS,EAAWA,SAVlB;AAWFE,IAAAA,MAAM,EAAcA,MAXlB;AAYFC,IAAAA,UAAU,EAAUA,UAZlB;AAaFG,IAAAA,QAAQ,EAAYA,QAblB;AAcFE,IAAAA,SAAS,EAAWA,SAdlB;AAeFE,IAAAA,cAAc,EAAMA,cAflB;AAgBFG,IAAAA,gBAAgB,EAAIA,gBAhBlB;AAiBFC,IAAAA,cAAc,EAAMA,cAjBlB;AAkBFC,IAAAA,eAAe,EAAKA,eAlBlB;AAmBFC,IAAAA,GAAG,EAAiBA,GAnBlB;AAoBFC,IAAAA,IAAI,EAAgBG,IApBlB;AAqBFD,IAAAA,IAAI,EAAgBA;AArBlB,GAAN;AAwBH,CA7DD;;AA8DA,eAAehC,wBAAf","sourcesContent":["\nimport moment from 'moment';\nimport 'moment/locale/fr'\nimport { useState } from 'react';\nmoment.locale('fr');\n\nconst getDetailCurrentForecast = detailCurrentForecast => {\n\n\n\n    const sunrise           = moment(detailCurrentForecast.sunrise*1000).format('HH:SS'); // 00:00\n    const sunset            = moment(detailCurrentForecast.sunset*1000).format('HH:SS'); // 00:00\n    const moonrise          = moment(detailCurrentForecast.moonrise*1000).format('HH:SS'); // 00:00\n    const moonset           = moment(detailCurrentForecast.moonset*1000).format('HH:SS'); // 00:00\n    const moon_phase        = detailCurrentForecast.moon_phase; // 0 <-> 1\n\n    const pressure          = Math.round(detailCurrentForecast.pressure); // hPa\n    const humidity          = detailCurrentForecast.humidity; // %\n\n    const wind_speed        = Math.round(detailCurrentForecast.wind_speed * 60); //km/h\n    const wind_gust         = Math.round(detailCurrentForecast.wind_gust * 60); // km/h\n    const wind_deg          = detailCurrentForecast.wind_deg; // degree°\n    const clouds            = detailCurrentForecast.clouds; // %\n\n    const temp_night        = Math.round(detailCurrentForecast.temp.night); // degree°\n    const temp_eve          = Math.round(detailCurrentForecast.temp.eve); // degree°\n    const temp_morn         = Math.round(detailCurrentForecast.temp.morn); // degree°\n    // Ressenti\n    const feels_like_day    = Math.round(detailCurrentForecast.feels_like.day); // degree°\n    const feels_like_night  = Math.round(detailCurrentForecast.feels_like.night); // degree°\n    const feels_like_eve    = Math.round(detailCurrentForecast.feels_like.eve); // degree°\n    const feels_like_morn   = Math.round(detailCurrentForecast.feels_like.morn); // degree°\n    const uvi               = detailCurrentForecast.uvi; // degree°\n\n    if(detailCurrentForecast.rain){\n        setRain(detailCurrentForecast.rain); \n    }\n    \n    const snow = 0;\n    if(detailCurrentForecast.snow){\n        snow = detailCurrentForecast.snow ; \n    }\n\n    return{ \n        sunrise :           sunrise,\n        sunset :            sunset,\n        moonrise :          moonrise,\n        moonset :           moonset,\n        moon_phase :        moon_phase,\n        pressure :          pressure,\n        humidity :          humidity,\n        wind_speed :        wind_speed,\n        wind_deg :          wind_deg,\n        wind_gust :         wind_gust,\n        clouds :            clouds,\n        temp_night :        temp_night,\n        temp_eve :          temp_eve,\n        temp_morn :         temp_morn,\n        feels_like_day :    feels_like_day,\n        feels_like_night :  feels_like_night,\n        feels_like_eve :    feels_like_eve,\n        feels_like_morn :   feels_like_morn,\n        uvi :               uvi,\n        rain :              Rain,\n        snow :              snow,\n        \n    }\n}\nexport default getDetailCurrentForecast\n"]},"metadata":{},"sourceType":"module"}