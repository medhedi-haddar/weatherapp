{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = mapPremultipliedBlendModes;\n\nvar _const = require('../const');\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI\n * @function mapPremultipliedBlendModes\n * @private\n * @param {Array<number[]>} [array] - The array to output into.\n * @return {Array<number[]>} Mapped modes.\n */\n\n\nfunction mapPremultipliedBlendModes() {\n  var pm = [];\n  var npm = [];\n\n  for (var i = 0; i < 32; i++) {\n    pm[i] = i;\n    npm[i] = i;\n  }\n\n  pm[_const.BLEND_MODES.NORMAL_NPM] = _const.BLEND_MODES.NORMAL;\n  pm[_const.BLEND_MODES.ADD_NPM] = _const.BLEND_MODES.ADD;\n  pm[_const.BLEND_MODES.SCREEN_NPM] = _const.BLEND_MODES.SCREEN;\n  npm[_const.BLEND_MODES.NORMAL] = _const.BLEND_MODES.NORMAL_NPM;\n  npm[_const.BLEND_MODES.ADD] = _const.BLEND_MODES.ADD_NPM;\n  npm[_const.BLEND_MODES.SCREEN] = _const.BLEND_MODES.SCREEN_NPM;\n  var array = [];\n  array.push(npm);\n  array.push(pm);\n  return array;\n}","map":{"version":3,"sources":["../../../src/core/utils/mapPremultipliedBlendModes.js"],"names":["mapPremultipliedBlendModes","pm","npm","i","array"],"mappings":";;;kBAYwBA,0B;;AAZxB,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA;;;;;;;;;;;AAUe,SAAA,0BAAA,GACf;AACI,MAAMC,EAAAA,GAAN,EAAA;AACA,MAAMC,GAAAA,GAAN,EAAA;;AAEA,OAAK,IAAIC,CAAAA,GAAT,CAAA,EAAgBA,CAAAA,GAAhB,EAAA,EAAwBA,CAAxB,EAAA,EACA;AACIF,IAAAA,EAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA;AACAC,IAAAA,GAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA;AACH;;AAEDD,EAAAA,EAAAA,CAAG,MAAA,CAAA,WAAA,CAAHA,UAAAA,CAAAA,GAA6B,MAAA,CAAA,WAAA,CAA7BA,MAAAA;AACAA,EAAAA,EAAAA,CAAG,MAAA,CAAA,WAAA,CAAHA,OAAAA,CAAAA,GAA0B,MAAA,CAAA,WAAA,CAA1BA,GAAAA;AACAA,EAAAA,EAAAA,CAAG,MAAA,CAAA,WAAA,CAAHA,UAAAA,CAAAA,GAA6B,MAAA,CAAA,WAAA,CAA7BA,MAAAA;AAEAC,EAAAA,GAAAA,CAAI,MAAA,CAAA,WAAA,CAAJA,MAAAA,CAAAA,GAA0B,MAAA,CAAA,WAAA,CAA1BA,UAAAA;AACAA,EAAAA,GAAAA,CAAI,MAAA,CAAA,WAAA,CAAJA,GAAAA,CAAAA,GAAuB,MAAA,CAAA,WAAA,CAAvBA,OAAAA;AACAA,EAAAA,GAAAA,CAAI,MAAA,CAAA,WAAA,CAAJA,MAAAA,CAAAA,GAA0B,MAAA,CAAA,WAAA,CAA1BA,UAAAA;AAEA,MAAME,KAAAA,GAAN,EAAA;AAEAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,GAAAA;AACAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,EAAAA;AAEA,SAAA,KAAA;AACH","sourcesContent":["import { BLEND_MODES } from '../const';\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI\n * @function mapPremultipliedBlendModes\n * @private\n * @param {Array<number[]>} [array] - The array to output into.\n * @return {Array<number[]>} Mapped modes.\n */\n\nexport default function mapPremultipliedBlendModes()\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n"]},"metadata":{},"sourceType":"script"}